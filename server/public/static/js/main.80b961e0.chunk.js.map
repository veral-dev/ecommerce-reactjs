{"version":3,"sources":["services/auth.services.js","services/cart.services.js","services/user.services.js","services/product.services.js","components/pages/shop/cartDetails/cartDetails.js","components/ui/NavBar.js","services/files.services.js","components/pages/admin/productForm/productForm.js","components/pages/shop/home/home.js","components/pages/auth/signup/Signup.js","components/pages/auth/login/Login.js","components/pages/admin/createProduct/createProduct.js","components/pages/admin/productList/productCardList.js","components/pages/admin/productList/productList.js","components/ui/Breadcrumbs.js","components/pages/admin/editProduct/editProduct.js","components/pages/admin/userList/userCardList.js","components/pages/admin/userList/userList.js","components/pages/admin/userForm/userForm.js","components/pages/admin/createUser/createUser.js","components/pages/shop/userUpdate/userUpdate.js","components/pages/shop/productDetails/productDetails.js","components/pages/shop/checkout/userFormCheckout.js","components/pages/shop/checkout/checkout.js","components/pages/shop/productList/productCardList.js","components/pages/shop/productList/shopProductList.js","App.js","index.js"],"names":["Services","signup","email","password","service","post","then","response","data","login","logout","loggedin","get","this","axios","create","baseURL","process","withCredentials","getAllCarts","getUserCart","cartId","postCart","cart","updateCart","id","put","deleteCart","delete","searchCart","search","getAllUsers","getUserDetails","postUser","user","updateUser","deleteUser","searchUser","getAllProducts","getProductDetails","postProduct","product","updateProduct","deleteProduct","searchProduct","CartDetails","props","componentDidMount","handleQuantity","action","cartCopy","state","quantity","products","deleteFromCart","subtotal","price","total","cartIconQuantity","forEach","elm","splice","length","cartServices","_id","theCart","setState","setTheCart","catch","err","console","log","productServices","ProductServices","userServices","UserServices","CartServices","name","excerpt","category","tags","images","model","modelPrev","choosedProduct","showtoast","showmodal","prevProps","userCart","Container","className","TableContainer","Table","style","padding","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","idx","key","productName","modelSize","IconButton","onClick","colSpan","Component","Navigation","toggle","authServices","setTheUser","handleClose","anchorEl","handleMenu","event","currentTarget","openCart","cartMenu","component","cartIcon","showDrawer","AuthServices","open","Boolean","AppBar","position","Toolbar","color","edge","Typography","variant","noWrap","as","to","src","alt","Hidden","smDown","implementation","Nav","Link","loggedInUser","aria-controls","aria-haspopup","fontSize","Badge","badgeContent","smUp","Drawer","anchor","onClose","ModalProps","keepMounted","Menu","TransitionComponent","Fade","PaperProps","transform","handleUpload","theFile","ProductForm","finishAction","document","getElementById","value","handleChange","e","target","handleSubmit","preventDefault","handleChangeVariant","handleSubmitVariant","modelCopy","push","size","stock","deleteVariant","handleFileUpload","uploadData","FormData","files","append","filesServices","secure_url","toggleModal","ProductsServices","FilesServices","Form","onSubmit","Group","Label","Control","type","onChange","multiple","width","Modal","show","onHide","Body","Button","striped","bordered","block","Home","closeModal","openModal","Signup","theLoggedNewUser","errorMessage","message","showError","maxWidth","CssBaseline","Avatar","backgroundColor","Grid","container","spacing","item","xs","TextField","margin","required","fullWidth","label","autoComplete","autoFocus","inputProps","title","pattern","FormControlLabel","control","Checkbox","justify","href","Toast","delay","autohide","Header","Login","theLoggedUser","history","goBack","Box","mt","CreateProduct","ProductCard","ProductsList","allProducts","handleChangeSearch","Row","Col","sm","Fab","productsSearched","placeholder","responsive","Spinner","animation","role","Breadcrumbs","separator","ProductUpdate","match","params","theProduct","addToCart","arr","includes","indexOf","actualQuantity","theUser","chooseProduct","productSubTotal","choosedProductCopy","a","setVariants","toggleToast","handleUpdateVariant","dataset","inputArray","querySelectorAll","obj","mainImage","imagesCopy","unshift","toString","undefined","data-id","UserCard","city","phone","UserList","allUsers","users","UserForm","lastName","street","zipCode","CreateUser","UserUpdate","wishlist","orders","imageCopy","md","height","objectFit","UserFormCheckout","address1","address2","country","gutterBottom","startIcon","Checkout","useStyles","makeStyles","root","media","MediaCard","lg","Card","Img","Title","Text","ShopProductsList","App","componentDidUpdate","prevState","fetchUser","userObj","localCartId","localStorage","getItem","fetchCart","setItem","userCopy","NavBar","exact","path","render","ReactDOM"],"mappings":"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","file":"static/js/main.80b961e0.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/auth`,\n            withCredentials: true\n        })\n    }\n\n    signup = ({ email, password }) => this.service.post('/signup', { email, password }).then(response => response.data)\n    login = ({ email, password }) => this.service.post('/login', { email, password }).then(response => response.data)\n    logout = () => this.service.post('/logout').then(response => response.data)\n    loggedin = () => this.service.get('/loggedin').then(response => response.data)\n}","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/carts`,\n            withCredentials: true\n        })\n    }\n\n    getAllCarts = () => this.service.get('/getAllCarts').then(response => response.data)\n    getUserCart = cartId => this.service.get(`/getUserCart/${cartId}`).then(response => response.data)\n    postCart = cart => this.service.post(`/new`, cart).then(response => response.data)\n    updateCart = (id, cart) => this.service.put(`/update/${id}`, cart).then(response => response.data)\n    deleteCart = (id) => this.service.delete(`/delete/${id}`).then(response => response.data)\n    searchCart = (search) => this.service.post(`/search`, { search }).then(response => response.data)\n}","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/users`,\n            withCredentials: true\n        })\n    }\n\n    getAllUsers = () => this.service.get('/getAllUsers').then(response => response.data)\n    getUserDetails = id => this.service.get(`/getOneUser/${id}`).then(response => response.data)\n    postUser = user => this.service.post(`/new`, user).then(response => response.data)\n    updateUser = (id, user) => this.service.put(`/update/${id}`, user).then(response => response.data)\n    deleteUser = (id) => this.service.delete(`/delete/${id}`).then(response => response.data)\n    searchUser = (search) => this.service.post(`/search`, { search }).then(response => response.data)\n}","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/products`,\n            withCredentials: true\n        })\n    }\n\n    getAllProducts = () => this.service.get('/getAllProducts').then(response => response.data)\n    getProductDetails = id => this.service.get(`/getOneProduct/${id}`).then(response => response.data)\n    postProduct = product => this.service.post(`/new`, product).then(response => response.data)\n    updateProduct = (id, product) => this.service.put(`/update/${id}`, product).then(response => response.data)\n    deleteProduct = (id) => this.service.delete(`/delete/${id}`).then(response => response.data)\n    searchProduct = (search) => this.service.post(`/search`, { search }).then(response => response.data)\n}","import React, { Component } from 'react'\n\n/* ----STYLING----*/\nimport '../shop.css'\n\n/* ----SERVICES----*/\nimport ProductServices from '../../../../services/product.services'\nimport UserServices from '../../../../services/user.services'\nimport CartServices from '../../../../services/cart.services'\n\n/* ----ROUTES----*/\n// import { Link } from 'react-router-dom'\n\n/* ----STYLE COMPONENTS----*/\nimport Container from 'react-bootstrap/Container'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n/* ----ICONS---- */\nimport IconButton from '@material-ui/core/IconButton';\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\nclass CartDetails extends Component {\n\n    constructor(props) {\n        super(props)\n        this.productServices = new ProductServices()\n        this.userServices = new UserServices()\n        this.cartServices = new CartServices()\n\n        this.state = {\n            product: {\n                name: '',\n                excerpt: '',\n                category: '',\n                tags: '',\n                images: [],\n                model: [],\n            },\n\n            user: {\n\n            },\n            cart: {},\n            modelPrev: [],\n            choosedProduct: { product: '', model: '', quantity: 1 },\n            showtoast: false,\n            showmodal: false,\n        }\n    }\n\n\n    componentDidMount = () => {\n\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.userCart._id !== this.props.userCart._id) this.setState({ cart: this.props.userCart })\n    }\n\n\n    handleQuantity = (action, id) => {\n        let cartCopy = { ...this.state.cart }\n\n        let quantity = cartCopy.products[id].quantity ? cartCopy.products[id].quantity : 0\n\n        if (action === 'rest') { if (quantity > 1) { quantity-- } else { this.deleteFromCart(id) } } else { if (quantity < 10) { quantity++ } }\n\n        if (cartCopy.products[id]) {\n            cartCopy.products[id].quantity = quantity\n            cartCopy.products[id].subtotal = cartCopy.products[id].price * quantity\n            cartCopy.total = cartCopy.cartIconQuantity = 0\n            cartCopy.products.forEach(elm => { cartCopy.total += elm.subtotal; cartCopy.cartIconQuantity += elm.quantity })\n            // this.setState({ cart: cartCopy }, () => { this.updateCart(); this.props.setTheCart(this.state.cart) })\n            this.updateCart(cartCopy)\n        }\n    }\n\n    deleteFromCart = (id) => {\n        let cartCopy = { ...this.state.cart }\n        cartCopy.products.splice(id, 1)\n        if (cartCopy.products.length === 0) { cartCopy.total = 0; cartCopy.cartIconQuantity = 0 }\n        this.updateCart(cartCopy)\n\n\n    }\n\n    updateCart = (cart) => {\n        this.cartServices.updateCart(this.state.cart._id, cart)\n            .then(theCart => {\n                this.setState({ cart: theCart }, () => this.props.setTheCart(this.state.cart))\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    /*----LOAD PRODUCTS----*/\n    // getProductDetails = () => {\n    //     this.productServices.getProductDetails(this.props.match.params.id)\n    //         .then(theProduct => this.setState({ product: theProduct }))\n    //         .then(() => this.setState({ modelPrev: [...this.state.product.model] }))\n    //         .catch(err => console.log(err))\n    // }\n\n    /*----UPDATE USER----*/\n    // updateUser = () => {\n    //     let userCopy = this.state.user\n    //     userCopy.cart = this.state.cart\n    //     this.userServices.updateUser(this.props.loggedInUser._id, this.state.user)\n    //         .then(theUser => this.setState({ user: theUser }))\n    //         .catch(err => console.log(err))\n    // }\n\n\n    /*----EDIT PRODUCT----*/\n    // updateProduct = () => {\n    //     this.productServices.updateProduct(this.props.match.params.id, this.state.product)\n    //         .then(theProduct => this.setState({ product: theProduct }))\n    //         .catch(err => console.log(err))\n    // }\n\n    // handleSubmit = async e => {\n    //     e.preventDefault()\n    //     await this.setVariants()\n    //     this.updateProduct()\n    //     this.toggleToast()\n    // }\n\n    // handleChange = e => {\n    //     let { name, value } = e.target\n    //     this.setState({\n    //         product: { ...this.state.product, [name]: value }\n    //     })\n    // }\n\n\n\n    render() {\n\n        return (\n            <Container className=\"cart-body\">\n                <h1 className=\"text-center text-uppercase\">Carrito</h1>\n                <TableContainer>\n                    <Table style={{ padding: \"5px\" }} aria-label=\"spanning table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Productos</TableCell>\n                                <TableCell align=\"center\">Cantidad</TableCell>\n                                <TableCell align=\"center\">Precio unitario</TableCell>\n                                <TableCell align=\"right\">Subtotal</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.props.userCart.products.length ? this.props.userCart.products.map((elm, idx) => (\n                                <TableRow key={idx}>\n                                    <TableCell>{elm.productName} | {elm.modelSize}</TableCell>\n                                    <TableCell align=\"center\">\n                                        <div className=\"d-flex align-items-center justify-content-center\">\n                                            <IconButton onClick={() => this.handleQuantity('rest', idx)} aria-label=\"Restar cantidad\">\n                                                <RemoveCircleOutlineIcon />\n                                            </IconButton>\n                                            {elm.quantity}\n                                            <IconButton onClick={() => this.handleQuantity('sum', idx)} aria-label=\"Sumar cantidad\">\n                                                <AddCircleOutlineIcon />\n                                            </IconButton>\n                                        </div>\n                                    </TableCell>\n                                    <TableCell align=\"center\">{elm.price}€</TableCell>\n                                    <TableCell align=\"right\">{elm.subtotal}€</TableCell>\n                                    {/* <TableCell align=\"center\"><IconButton color=\"secondary\" onClick={() => this.deleteFromCart(idx)} aria-label=\"Borrar\">\n                                        <DeleteOutlinedIcon />\n                                    </IconButton></TableCell> */}\n                                </TableRow>\n                            )) : <TableRow><TableCell colSpan={4}>Tu carrito está vacío</TableCell></TableRow>}\n                            <TableRow>\n                                <TableCell colSpan={2}><strong>Total</strong></TableCell>\n                                <TableCell align=\"right\"></TableCell>\n                                <TableCell align=\"right\"><strong>{this.state.cart.total}€</strong></TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n\n\n        )\n    }\n}\n\nexport default CartDetails","import React, { Component } from 'react'\n\n/* ----STYLE----*/\nimport './ui.css'\n\n/* ----ROUTES----*/\nimport { Link } from 'react-router-dom'\nimport CartDetails from '../pages/shop/cartDetails/cartDetails'\n\n/* ----SERVICES----*/\nimport AuthServices from '../../services/auth.services'\n\n/* ----STYLE COMPONENTS----*/\nimport Nav from 'react-bootstrap/Nav'\n// import Link from '@material-ui/core/Link';\nimport Menu from '@material-ui/core/Menu';\nimport Fade from '@material-ui/core/Fade';\nimport Badge from '@material-ui/core/Badge';\nimport AppBar from '@material-ui/core/AppBar';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n/* ----ICONS---- */\nimport MenuIcon from '@material-ui/icons/Menu';\nimport PersonOutlineOutlinedIcon from '@material-ui/icons/PersonOutlineOutlined';\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nclass Navigation extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            cartMenu: false,\n            anchorEl: null,\n            cartIcon: '0',\n            showDrawer: false\n        }\n        this.authServices = new AuthServices()\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.userCart.cartIconQuantity !== this.props.userCart.cartIconQuantity) this.setState({ cartIcon: this.props.userCart.cartIconQuantity })\n    }\n\n    logout = () => {\n        this.toggle(\"showDrawer\")\n        this.authServices.logout()\n            .then(response => { this.props.setTheUser(false) })\n            .catch(err => console.log(err))\n    }\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n    handleMenu = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n    openCart = () => this.setState({ cartMenu: !this.state.cartMenu })\n    toggle = (component) => this.setState({ [component]: !this.state[component] })\n\n    render() {\n\n        // const greeting = this.props.loggedInUser ? <>Hola, {this.props.loggedInUser.name}</> : <>Hola, invitad@</>\n        const { anchorEl } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div>\n                {/* <CssBaseline /> */}\n                <AppBar position=\"fixed\" className=\"navbar-main\" style={{ 'color': 'black', 'backgroundColor': 'rgba(255, 255, 255, 0.65)' }}>\n                    <Toolbar className=\"d-flex justify-content-between\">\n                        <div className=\"menuButton\">\n                            <IconButton color=\"inherit\" aria-label=\"Open drawer\" edge=\"start\" onClick={() => this.toggle(\"showDrawer\")} >\n                                <MenuIcon />\n                            </IconButton>\n                        </div>\n\n                        <Typography className=\"fitcontent-width\" variant=\"h6\" noWrap>\n                            <Link as=\"div\" to=\"/\"><img src=\"/Relakso-Logo-BL.png\" alt=\"Relakso ReactJS Ecommerce\" /></Link>\n                        </Typography>\n\n                        <Hidden smDown implementation=\"css\">\n                            <Nav className=\"ml-auto\">\n                                <Nav.Link as=\"div\"> <Link to=\"/profile\">Perfil</Link></Nav.Link>\n                                <Nav.Link as=\"div\"> <Link to=\"/admin/products/create\">Crear producto</Link></Nav.Link>\n                                <Nav.Link as=\"div\"> <Link to=\"/admin/products-list\">Lista de productos</Link></Nav.Link>\n                                <Nav.Link as=\"div\"> <Link to=\"/admin/users/users-list\">Lista de usuarios</Link></Nav.Link>\n                                <Nav.Link as=\"div\"> <Link to=\"/admin/users/create-user\">Crear usuario</Link></Nav.Link>\n                                <Nav.Link as=\"div\"> <Link to=\"/cuenta/editar\">Editar mi cuenta</Link></Nav.Link>\n                                {this.props.loggedInUser ? <Nav.Link onClick={this.logout}>Cerrar sesión</Nav.Link> : null}\n                            </Nav>\n                        </Hidden>\n\n                        <div className=\"fitcontent-width\">\n                            <IconButton aria-controls=\"fade-menu\" aria-haspopup=\"false\" >\n                                {this.props.loggedInUser ? <Link style={{ fontSize: '1rem' }} to=\"/profile\"><PersonOutlineOutlinedIcon style={{ color: 'black' }} /></Link> : <Link style={{ fontSize: '1rem' }} to=\"/login\"><PersonOutlineOutlinedIcon style={{ color: 'black' }} /></Link>}\n                            </IconButton>\n                            <IconButton aria-controls=\"fade-menu\" aria-haspopup=\"false\" onClick={this.handleMenu} >\n                                <Badge color=\"secondary\" badgeContent={this.state.cartIcon}>\n                                    <ShoppingCartOutlinedIcon style={{ color: 'black' }} />\n                                </Badge>\n                            </IconButton>\n                        </div>\n                    </Toolbar>\n                </AppBar>\n\n                <nav >\n                    {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n                    <Hidden smUp implementation=\"css\">\n                        <Drawer\n                            variant=\"temporary\"\n                            anchor='left'\n                            open={this.state.showDrawer}\n                            onClose={() => this.toggle(\"showDrawer\")}\n                            ModalProps={{ keepMounted: true, }} >\n                            <IconButton onClick={() => this.toggle(\"showDrawer\")} >\n                                <CloseIcon />\n                            </IconButton>\n                            <Nav className=\"mx-auto responsive-navbar\">\n                                <img src=\"/Relakso-Logo-BL.png\" alt=\"Relakso ReactJS Ecommerce\" />\n\n\n\n                                <Link as=\"div\" onClick={() => this.toggle(\"showDrawer\")} to=\"/admin/products/create\">Crear producto</Link>\n                                <Link as=\"div\" onClick={() => this.toggle(\"showDrawer\")} to=\"/admin/products-list\">Lista de productos</Link>\n                                <Link as=\"div\" onClick={() => this.toggle(\"showDrawer\")} to=\"/admin/users/users-list\">Lista de usuarios</Link>\n                                <Link as=\"div\" onClick={() => this.toggle(\"showDrawer\")} to=\"/admin/users/create-user\">Crear usuario</Link>\n                                <Link as=\"div\" onClick={() => this.toggle(\"showDrawer\")} to=\"/cuenta/editar\">Editar mi cuenta</Link>\n                                {this.props.loggedInUser ? <Nav.Link onClick={this.logout}>Cerrar sesión</Nav.Link> : null}\n                            </Nav>\n                        </Drawer>\n                    </Hidden>\n\n\n                </nav>\n\n                <Menu id=\"fade-menu\" keepMounted TransitionComponent={Fade}\n                    anchorEl={anchorEl}\n                    open={open}\n                    onClose={this.handleClose}\n                    PaperProps={{ style: { transform: 'translateY(30%)' } }} >\n                    <CartDetails loggedInUser={this.props.loggedInUser} setTheCart={this.props.setTheCart} userCart={this.props.userCart} />\n                </Menu>\n            </div>\n\n            // this.props.loggedInUser ?\n            //     (\n            //         <>\n            //             <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\n            //                 <Navbar.Brand href=\"#home\">Relakso e-Commerce</Navbar.Brand>\n            //                 <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            //                 <Navbar.Collapse id=\"basic-navbar-nav\">\n            //                     <Nav className=\"ml-auto\">\n            //                         <Nav.Link as=\"div\"> <Link to=\"/\">Inicio</Link></Nav.Link>\n            //                         <Nav.Link as=\"div\"> <Link to=\"/profile\">Perfil</Link></Nav.Link>\n            //                         <Nav.Link as=\"div\"> <Link to=\"/admin/products/create\">Crear producto</Link></Nav.Link>\n            //                         <Nav.Link as=\"div\"> <Link to=\"/admin/products/products-list\">Lista de productos</Link></Nav.Link>\n            //                         <Nav.Link as=\"div\"> <Link to=\"/admin/users/users-list\">Lista de usuarios</Link></Nav.Link>\n            //                         <Nav.Link as=\"div\"> <Link to=\"/admin/users/create-user\">Crear usuario</Link></Nav.Link>\n            //                         <Nav.Link as=\"div\"> <Link to=\"/cuenta/editar\">Editar mi cuenta</Link></Nav.Link>\n            //                         <Nav.Link onClick={this.logout}>Cerrar sesión</Nav.Link>\n            //                         <Nav.Link as=\"div\">{greeting}</Nav.Link>\n\n            //                         <Button as=\"div\" aria-controls=\"fade-menu\" aria-haspopup=\"false\" onClick={this.handleMenu}>\n            //                             <Badge color=\"secondary\" badgeContent={this.state.cartIcon}>\n            //                                 <LocalMallOutlinedIcon />\n            //                             </Badge>\n            //                         </Button>\n            //                     </Nav>\n            //                 </Navbar.Collapse>\n            //             </Navbar>\n\n            //             <Menu id=\"fade-menu\" keepMounted TransitionComponent={Fade}\n            //                 anchorEl={anchorEl}\n            //                 open={open}\n            //                 onClose={this.handleClose}\n            //                 PaperProps={{ style: { transform: 'translateY(15%)' } }} >\n            //                 <CartDetails loggedInUser={this.props.loggedInUser} setTheCart={this.props.setTheCart} userCart={this.props.userCart} />\n            //             </Menu>\n            //         </>\n            //     )\n            //     :\n            //     (\n            //         <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\n            //             <Navbar.Brand href=\"#home\">Relakso e-Commerce</Navbar.Brand>\n            //             <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            //             <Navbar.Collapse id=\"basic-navbar-nav\">\n            //                 <Nav className=\"ml-auto\">\n            //                     <Nav.Link as=\"div\"> <Link to=\"/\">Inicio</Link></Nav.Link>\n            //                     <Nav.Link as=\"div\"> <Link to=\"/signup\">Registro</Link></Nav.Link>\n            //                     <Nav.Link as=\"div\"> <Link to=\"/login\">Inicio sesión</Link></Nav.Link>\n            //                     <Nav.Link as=\"div\">{greeting}</Nav.Link>\n            //                 </Nav>\n            //             </Navbar.Collapse>\n            //         </Navbar>\n            //     )\n\n\n\n        )\n    }\n}\n\nexport default Navigation","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/files`,\n            withCredentials: true\n        })\n    }\n\n    handleUpload = theFile => this.service.post('/upload', theFile).then(response => response.data)\n}","import React, { Component } from 'react'\n\n/* ----STYLING----*/\nimport '../admin.css';\nimport './productForm.css';\n\n/* ----SERVICES----*/\nimport ProductsServices from '../../../../services/product.services'\nimport FilesServices from '../../../../services/files.services'\n\n/* ----STYLE COMPONENTS----*/\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Table from 'react-bootstrap/Table'\n\n\n\nclass ProductForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.ProductServices = new ProductsServices()\n        this.filesServices = new FilesServices()\n        this.state = {\n            product: {\n                name: '',\n                excerpt: '',\n                category: '',\n                tags: '',\n                images: [],\n                model: [],\n            },\n            variant: {\n                size: '',\n                stock: 0,\n                price: 0\n            },\n\n        }\n    }\n\n    finishAction = () => {\n        this.setState({\n            product: {\n                name: '',\n                excerpt: '',\n                category: '',\n                tags: '',\n                images: [],\n                model: [],\n            },\n        })\n        document.getElementById(\"inputFile\").value = null\n    }\n\n    postProduct = () => {\n        this.ProductServices.postProduct(this.state.product)\n            .then(() => this.finishAction())\n            .catch(err => console.log(err))\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            product: { ...this.state.product, [name]: value }\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.postProduct()\n    }\n\n    handleChangeVariant = e => {\n        let { name, value } = e.target\n        this.setState({\n            variant: { ...this.state.variant, [name]: value }\n        })\n    }\n    handleSubmitVariant = e => {\n        e.preventDefault()\n        let modelCopy = [...this.state.product.model]\n        modelCopy.push(this.state.variant)\n        this.setState({\n            product: { ...this.state.product, model: modelCopy },\n            variant: {\n                size: '',\n                stock: 0,\n                price: 0\n            },\n            showmodal: false,\n        })\n    }\n\n    deleteVariant = idx => {\n        let modelCopy = [...this.state.product.model]\n        modelCopy.splice(idx, 1)\n        this.setState({\n            product: { ...this.state.product, model: modelCopy }\n        })\n    }\n\n    handleFileUpload = e => {\n        const uploadData = new FormData()\n        for (let key in e.target.files) {\n            uploadData.append(\"images\", e.target.files[key])\n        }\n        this.filesServices.handleUpload(uploadData)\n            .then(response => {\n                this.setState({\n                    product: { ...this.state.product, images: response.secure_url }\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    toggleModal = () => this.setState({ showmodal: !this.state.showmodal })\n\n    render() {\n        return (\n            <div className=\"py-5 create-product\">\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Nombre</Form.Label>\n                        <Form.Control type=\"text\" name=\"name\" value={this.state.product.name} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Descripción corta</Form.Label>\n                        <Form.Control type=\"text\" name=\"excerpt\" value={this.state.product.excerpt} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Categoría</Form.Label>\n                        <Form.Control type=\"text\" name=\"category\" value={this.state.product.category} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Etiquetas de búsqueda</Form.Label>\n                        <Form.Control type=\"text\" name=\"tags\" value={this.state.product.tags} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Imágenes</Form.Label>\n                        <Form.Control type=\"file\" id=\"inputFile\" name=\"images\" onChange={this.handleFileUpload} multiple />\n                        {this.state.product.images !== 0 ? this.state.product.images.map((elm, idx) => <img className=\"m-3\" src={elm} key={idx} alt={idx} style={{ width: \"50px\" }} />) : 'No hay imágenes cargadas'}\n                    </Form.Group>\n\n\n                </Form>\n\n\n                <Modal className=\"modal-set\" show={this.state.showmodal} onHide={this.toggleModal}>\n                    <Modal.Body>\n                        <Form onSubmit={this.handleSubmitVariant}>\n                            <Form.Group>\n                                <Form.Label>Medida</Form.Label>\n                                <Form.Control type=\"text\" name=\"size\" value={this.state.variant.size} onChange={this.handleChangeVariant} />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control type=\"number\" name=\"price\" value={this.state.variant.price} onChange={this.handleChangeVariant} />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Stock</Form.Label>\n                                <Form.Control type=\"number\" name=\"stock\" value={this.state.variant.stock} onChange={this.handleChangeVariant} />\n                            </Form.Group>\n                            <Button variant=\"dark\" type=\"submit\" onSubmit={this.handleSubmitVariant}>Añadir nueva variante al producto</Button>\n                        </Form>\n                    </Modal.Body>\n                </Modal>\n                <h3>Variaciones</h3>\n                <Button className=\"mb-20\" variant=\"outline-light\" onClick={this.toggleModal}>Crear nueva variación</Button>\n\n                <Table striped bordered>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Size</th>\n                            <th>Stock</th>\n                            <th>Price</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.product.model.map((elm, idx) =>\n                            <tr key={idx}>\n                                <td>{idx + 1}</td>\n                                <td>{elm.size}</td>\n                                <td>{elm.stock}</td>\n                                <td>{elm.price}€</td>\n                                <td><Button className=\"mb-20\" variant=\"outline-danger\" onClick={() => this.deleteVariant(idx)}>Borrar</Button></td>\n                            </tr>\n                        )}\n                    </tbody>\n                </Table>\n                <hr></hr>\n                <Button variant=\"outline-success\" type=\"submit\" size=\"lg\" block onClick={this.handleSubmit}>Crear nuevo producto</Button>\n            </div>\n        )\n    }\n}\n\nexport default ProductForm","import React, { Component } from 'react'\n\n/* ----COMPONENTS----*/\nimport ProductForm from '../../admin/productForm/productForm'\n\n/* ----ROUTES----*/\nimport { Link } from 'react-router-dom'\n\n/* ----STYLE COMPONENTS----*/\nimport Container from 'react-bootstrap/Container'\nimport Modal from 'react-bootstrap/Modal'\n\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            products: [],\n            showmodal: false\n        }\n    }\n\n    closeModal = () => this.setState({ showmodal: false })\n    openModal = () => this.setState({ showmodal: true })\n\n    render() {\n\n        return (\n            <Container className=\"client-body\">\n\n                <h1>Bienvenido a Relakso</h1>\n\n                {this.props.loggedInUser && <Link as=\"button\" className=\"mb-20 p-2 btn btn-info\" to=\"/admin/products/create\">Crear nuevo producto</Link>}\n\n                <Modal show={this.state.showmodal} onHide={this.closeModal}>\n                    <Modal.Body>\n                        <h3>Nuevo producto</h3>\n                        <hr></hr>\n                        <ProductForm closeModal={this.closeModal} />\n                    </Modal.Body>\n                </Modal>\n\n            </Container>\n        )\n    }\n}\n\nexport default Home","import React, { Component } from 'react'\n\n/* ----STYLE----*/\nimport '../login.css'\n\n/* ----SERVICES----*/\nimport AuthServices from '../../../../services/auth.services'\n\n/* ----STYLE COMPONENTS----*/\n// import Form from 'react-bootstrap/Form'\n// import Button from 'react-bootstrap/Button'\n// import Container from 'react-bootstrap/Container'\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Toast from 'react-bootstrap/Toast'\n\n\n\nclass Signup extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            email: '',\n            password: '',\n            errorMessage: '',\n            showError: false,\n        }\n        this.authServices = new AuthServices()\n    }\n\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    postUser = () => {\n        this.authServices.signup(this.state)\n            .then(theLoggedNewUser => {\n                this.setState({ email: '', password: '' })\n                this.props.setTheUser(theLoggedNewUser)\n            })\n            .catch(err => this.setState({ errorMessage: err.response.data.message },\n                () => { this.toggle(\"showError\") }))\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        //Validación en front, TO-DO\n        // if (this.state.password.length < 6 || !this.state.email.match(/[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*@[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*[.][a-zA-Z]{1,5}/)) {\n        //     this.setState({ errorMessage: 'RELLENA LOS CAMPOS' })\n        //     return\n        // }\n        this.postUser()\n    }\n\n    toggle = (component) => this.setState({ [component]: !this.state[component] })\n\n    render() {\n\n        return (\n\n\n            <Container maxWidth=\"xs\">\n                <CssBaseline />\n                <div className=\"paper\">\n                    <Avatar className=\"avatar\" style={{ backgroundColor: '#fdd100' }}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Registro\n                    </Typography>\n                    <form className=\"form\" onSubmit={this.handleSubmit}>\n                        <Grid container spacing={2}>\n                            {/* <Grid item xs={12} sm={6}>\n                                <TextField autoComplete=\"fname\" name=\"name\" variant=\"outlined\" required fullWidth id=\"name\" label=\"Nombre\" autoFocus />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField variant=\"outlined\" required fullWidth id=\"lastName\" label=\"Apellidos\" name=\"lastName\" autoComplete=\"lname\" />\n                            </Grid> */}\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Correo electrónico\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    autoFocus\n                                    type=\"text\" value={this.state.email} onChange={this.handleChange}\n                                    inputProps={{ title: \"Tu correo debe incluir @ y un dominio. Ej: .com, .es...\", pattern: \"[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*@[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*[.][a-zA-Z]{1,5}\" }}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Contraseña\" type=\"password\" id=\"password\"\n                                    inputProps={{ title: \"Tu contraseña debe incluir más de 6 caracteres\", pattern: \".{6,}\" }}\n                                    autoComplete=\"current-password\" value={this.state.password} onChange={this.handleChange} />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <FormControlLabel required control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                                    label=\"He leído y acepto la política de privacidad\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className=\"submit\">\n                            Registrarse\n                        </Button>\n                        <Grid container justify=\"flex-end\">\n                            <Grid item>\n                                <Link href=\"#\" variant=\"body2\">\n                                    ¿Ya tienes cuenta? Iniciar sesión\n                                </Link>\n                            </Grid>\n                        </Grid>\n                        <Toast className=\"mt-3\" onClose={() => this.toggle(\"showError\")} show={this.state.showError} delay={3000} autohide>\n                            <Toast.Header>\n                                <strong className=\"mr-auto\">{this.state.errorMessage}</strong>\n                            </Toast.Header>\n                        </Toast>\n                    </form>\n                </div>\n            </Container>\n\n\n            // <Container>\n\n            //     <h1>Registro de usuarios</h1>\n\n            //     <Form onSubmit={this.handleSubmit}>\n            //         <Form.Group>\n            //             <Form.Label>Email</Form.Label>\n            //             <Form.Control type=\"email\" name=\"email\" pattern=\"[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*@[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*[.][a-zA-Z]{1,5}\" placeholder=\"Enter email\" value={this.state.email} onChange={this.handleChange} />\n            //             <Form.Text className=\"text-muted\">We'll never share your email with anyone else.</Form.Text>\n            //         </Form.Group>\n\n            //         <Form.Group controlId=\"formBasicPassword\">\n            //             <Form.Label>Contraseña</Form.Label>\n            //             <Form.Control type=\"password\" pattern=\".{6,}\" name=\"password\" placeholder=\"Contraseña\" value={this.state.password} onChange={this.handleChange} />\n            //         </Form.Group>\n            //         <Form.Group controlId=\"formBasicCheckbox\">\n            //             <Form.Check type=\"checkbox\" label=\"Check me out\" />\n            //         </Form.Group>\n            //         <Button variant=\"outline-dark\" type=\"submit\">Registrarse</Button>\n            //     </Form>\n            //     <p>{this.state.errorMessage}</p>\n            // </Container>\n\n        )\n    }\n}\n\nexport default Signup","import React, { Component } from 'react'\n\n/* ----STYLE----*/\nimport '../login.css'\n\n/* ----SERVICES----*/\nimport AuthServices from '../../../../services/auth.services'\n\n/* ----STYLE COMPONENTS----*/\n// import Form from 'react-bootstrap/Form'\n// import Button from 'react-bootstrap/Button'\n// import Container from 'react-bootstrap/Container'\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Toast from 'react-bootstrap/Toast'\n\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            email: '',\n            password: '',\n            errorMessage: '',\n            showError: false,\n        }\n        this.authServices = new AuthServices()\n    }\n\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    postUser = () => {\n        this.authServices.login(this.state)\n            .then(theLoggedUser => {\n                this.setState({ email: '', password: '' })\n                this.props.setTheUser(theLoggedUser)\n                this.props.history.goBack()\n            })\n            .catch(err => this.setState({ errorMessage: err.response.data.message },\n                () => { this.toggle(\"showError\") }))\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.postUser()\n\n    }\n\n    toggle = (component) => this.setState({ [component]: !this.state[component] })\n\n    render() {\n\n        return (\n\n            <Container maxWidth=\"xs\">\n                <CssBaseline />\n                <div className=\"paper\">\n                    <Avatar className=\"avatar\" style={{ backgroundColor: '#fdd100' }}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Iniciar sesión\n                    </Typography>\n                    <form className=\"form\" onSubmit={this.handleSubmit}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Correo electrónico\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            type=\"text\" value={this.state.email} onChange={this.handleChange}\n                            inputProps={{ title: \"Tu correo debe incluir @ y un dominio. Ej: .com, .es...\", pattern: \"[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*@[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*[.][a-zA-Z]{1,5}\" }}\n                        />\n                        <TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Contraseña\" type=\"password\" id=\"password\"\n                            inputProps={{ title: \"Tu contraseña debe incluir más de 6 caracteres\", pattern: \".{6,}\" }}\n                            autoComplete=\"current-password\" value={this.state.password} onChange={this.handleChange} />\n\n                        <FormControlLabel control={<Checkbox value=\"remember\" color=\"primary\" />} label=\"No cerrar sesión\" />\n\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className=\"my-3\">\n                            Iniciar sesión\n                        </Button>\n                        <Grid container>\n                            {/* <Grid item xs>\n                                <Link href=\"#\" variant=\"body2\">¿Olvidaste la contraseña?</Link>\n                            </Grid> */}\n                            <Grid item>\n                                <Link href=\"/signup\" variant=\"body2\">\n                                    {\"¿No tienes cuenta? Crear cuenta\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                        {/* <Snackbar open={this.showError} autoHideDuration={6000} onClose={() => this.toggle(\"showError\")}>\n                            <Alert onClose={() => this.toggle(\"showError\")} severity=\"success\">\n                                This is a success message!\n                            </Alert>\n                        </Snackbar> */}\n                        <Toast className=\"mt-3\" style={{ backgroundColor : 'red' }} onClose={() => this.toggle(\"showError\")} show={this.state.showError} delay={3000} autohide>\n                            <Toast.Header>\n                                <strong className=\"mr-auto\">{this.state.errorMessage}</strong>\n                            </Toast.Header>\n                        </Toast>\n                    </form>\n                </div>\n                <Box mt={8}>\n                </Box>\n            </Container>\n\n        )\n    }\n}\n\nexport default Login","import React, { Component } from 'react'\n\n/* ----STYLE COMPONENTS----*/\nimport ProductForm from '../productForm/productForm'\nimport Container from 'react-bootstrap/Container'\n\n\nclass CreateProduct extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            products: [],\n            showmodal: false\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"admin-body\">\n                <Container>\n                    <h1 className=\"text-center\">Panel de creación de producto</h1>\n                    <ProductForm />\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default CreateProduct","import React from 'react'\n\n/* ----ROUTES----*/\nimport { Link } from 'react-router-dom'\n\n/* ----STYLE COMPONENTS----*/\n\nimport Button from 'react-bootstrap/Button'\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst ProductCard = ({ name, images, excerpt, category, tags, model, _id, deleteProduct }) => {\n\n    return (\n        <tr>\n            <td><img src={images[0]} alt={name} style={{ width: \"50px\" }} /></td>\n            <td>{name}</td>\n            <td>{category}</td>\n            <td className=\"d-flex\">\n                <Link as=\"button\" className=\"p-2 my-2 btn btn-outline-info\" to={`/admin/editar-producto/${_id}`}><EditIcon fontSize=\"small\" /></Link>\n                <Button variant=\"outline-danger\" className=\"ml-2 my-2 p-2\" onClick={deleteProduct}><DeleteForeverIcon fontSize=\"small\" /></Button>\n            </td>\n        </tr>\n    );\n}\n\nexport default ProductCard","import React, { Component } from 'react'\n\n/* ----STYLING----*/\nimport '../admin.css';\nimport './productList.css'\n\n/* ----SERVICES----*/\nimport ProductsServices from '../../../../services/product.services'\n\n/* ----ROUTES----*/\nimport { Link } from 'react-router-dom'\n\n/* ----STYLE COMPONENTS----*/\nimport ProductCard from './productCardList'\nimport Table from 'react-bootstrap/Table'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Spinner from 'react-bootstrap/Spinner'\n\n\n// import Button from 'react-bootstrap/Button'\n// import Modal from 'react-bootstrap/Modal'\n\nclass ProductsList extends Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            products: [],\n            showmodal: false,\n        }\n        this.productServices = new ProductsServices()\n    }\n\n    componentDidMount = () => this.getAllProducts()\n\n    getAllProducts = () => {\n        this.productServices.getAllProducts()\n            .then(allProducts => this.setState({ products: allProducts }))\n            .catch(err => console.log(err))\n    }\n\n    deleteProduct = (id) => {\n        this.productServices.deleteProduct(id)\n            .then(() => this.getAllProducts())\n            .catch(err => console.log(err))\n    }\n\n    searchProduct = (value) => {\n        this.productServices.searchProduct(value)\n            .then(allProducts => this.setState({ products: allProducts }))\n            .catch(err => console.log(err))\n    }\n\n    handleChangeSearch = e => {\n        let { value } = e.target\n        this.searchProduct(value)\n    }\n\n    render() {\n\n        return (\n            <div className=\"admin-body\">\n                <Container className=\"pb-5\">\n\n                    <Row className=\"mb-3\">\n                        <Col sm={8}>\n                            <h1>Listado de productos</h1>\n                        </Col>\n                        <Col sm={4}>\n\n                            {this.props.loggedInUser && <Link className=\"float-right mobile-button\" to=\"/admin/products/create\">\n\n                                <Fab style={{ backgroundColor: '#4caf50' }} aria-label=\"add\">\n                                    <AddIcon />\n                                </Fab></Link>}\n                        </Col>\n                    </Row>\n                    <input className=\"form-control mr-sm-2\" value={this.productsSearched} type=\"search\" name=\"search\" placeholder=\"Buscar\" aria-label=\"Search\"\n                        id=\"index-input\" onChange={this.handleChangeSearch} />\n\n                    {this.state.products.length ? (\n\n                        <Table responsive striped bordered>\n                            <thead>\n                                <tr>\n                                    <th>Imagen</th>\n                                    <th>Producto</th>\n                                    <th>Categoría</th>\n                                    <th>Acción</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.state.products.map(elm => <ProductCard key={elm._id} {...elm} deleteProduct={() => this.deleteProduct(elm._id)} />)}\n                            </tbody>\n                        </Table>\n\n                    )\n                        :\n\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Cargando...</span>\n                        </Spinner>\n\n                    }\n\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default ProductsList","import React from 'react'\n\n/* ----ROUTES----*/\n\n/* ----STYLE COMPONENTS----*/\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\n/* ----ICONS----*/\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\n\nconst ProductCard = ({ product, category }) => {\n\n    return (\n        <Breadcrumbs style={{ fontSize: '12px' }} separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n            <Link color=\"inherit\" href=\"/\">\n                <HomeOutlinedIcon />\n            </Link>\n            <Link color=\"inherit\" href=\"/\">\n                {category}\n            </Link>\n            <Typography style={{ fontSize: '12px' }}>{product}</Typography>\n        </Breadcrumbs>\n    );\n}\n\nexport default ProductCard","import React, { Component } from 'react'\n\n/* ----STYLING----*/\n// import '../shop.css'\n\n/* ----SERVICES----*/\nimport ProductServices from '../../../../services/product.services'\nimport UserServices from '../../../../services/user.services'\nimport FilesServices from '../../../../services/files.services'\nimport CartServices from '../../../../services/cart.services'\n\n/* ----ROUTES----*/\nimport { Link } from 'react-router-dom'\n\nimport Breadcrumbs from '../../../ui/Breadcrumbs'\n\n\n/* ----STYLE COMPONENTS----*/\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Toast from 'react-bootstrap/Toast'\nimport Table from 'react-bootstrap/Table'\nimport Modal from 'react-bootstrap/Modal'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\n\n/* ----ICONS---- */\nimport IconButton from '@material-ui/core/IconButton';\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\nclass ProductUpdate extends Component {\n\n    constructor(props) {\n        super(props)\n        this.productServices = new ProductServices()\n        this.userServices = new UserServices()\n        this.filesServices = new FilesServices()\n        this.cartServices = new CartServices()\n\n        this.state = {\n            product: {\n                name: '',\n                excerpt: '',\n                category: '',\n                tags: '',\n                images: [],\n                model: [],\n            },\n            variant: {\n                size: '',\n                stock: 0,\n                price: 0\n            },\n            user: {\n\n            },\n            cart: { _id: undefined, products: [], cartIconQuantity: 0 },\n            modelPrev: [],\n            choosedProduct: { product: '', model: '', price: 0, quantity: 1 },\n            showtoast: false,\n            showmodal: false,\n        }\n    }\n\n    componentDidMount = () => {\n        this.getProductDetails()\n        this.setState({ cart: this.props.userCart })\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.loggedInUser._id !== this.props.loggedInUser._id) this.setState({ user: this.props.loggedInUser })\n        if (prevProps.userCart._id !== this.props.userCart._id) this.setState({ cart: this.props.userCart })\n    }\n\n\n    /*----LOAD PRODUCTS----*/\n    getProductDetails = () => {\n        this.productServices.getProductDetails(this.props.match.params.id)\n            .then(theProduct => this.setState({ product: theProduct }))\n            .then(() => this.setState({ modelPrev: [...this.state.product.model] }))\n            .catch(err => console.log(err))\n    }\n    /*----ADD TO CART----*/\n    addToCart = () => {\n\n        let cartCopy = { ...this.state.cart }\n        if (cartCopy.total === 0) {\n            cartCopy.products.push(this.state.choosedProduct)\n        }\n        else {\n            let arr = []\n            cartCopy.products.forEach(elm => arr.push(elm.model))\n            if (arr.includes(this.state.choosedProduct.model)) {\n                let idx = arr.indexOf(this.state.choosedProduct.model)\n                cartCopy.products[idx].quantity += this.state.choosedProduct.quantity\n                cartCopy.products[idx].subtotal = cartCopy.products[idx].quantity * cartCopy.products[idx].price\n            } else {\n                cartCopy.products.push(this.state.choosedProduct)\n            }\n        }\n\n        let actualQuantity = 0\n        cartCopy.total = 0\n        cartCopy.products.forEach(elm => { actualQuantity += elm.quantity; cartCopy.total += elm.subtotal })\n        cartCopy.cartIconQuantity = actualQuantity\n        // this.setState({cart: cartCopy }, () => { this.updateCart(); this.props.setTheCart(this.state.cart)})\n        this.updateCart(cartCopy)\n    }\n\n    updateCart = (cart) => {\n        this.cartServices.updateCart(this.state.cart._id, cart)\n            .then(theCart => {\n                this.setState({ cart: theCart }, () => this.props.setTheCart(this.state.cart))\n            })\n            .catch(err => console.log(err))\n    }\n\n    updateUser = () => {\n        let userCopy = this.state.user\n        userCopy.cart = this.state.cart\n        this.userServices.updateUser(this.props.loggedInUser._id, this.state.user)\n            .then(theUser => this.setState({ user: theUser }))\n            .catch(err => console.log(err))\n    }\n\n    chooseProduct = (idx, price, size) => {\n        let productSubTotal = price * this.state.choosedProduct.quantity\n        let choosedProductCopy = {\n            product: this.state.product._id,\n            model: idx,\n            productName: this.state.product.name,\n            modelSize: size,\n            price: price,\n            quantity: this.state.choosedProduct.quantity,\n            subtotal: productSubTotal\n        }\n        this.setState({ choosedProduct: choosedProductCopy }, () => console.log(this.state.choosedProduct))\n    }\n    handleQuantity = (action) => {\n        let quantity = this.state.choosedProduct.quantity\n        if (action === 'rest') { if (quantity > 1) { quantity-- } } else { if (quantity < 10) { quantity++ } }\n        let subtotal = this.state.choosedProduct.price * quantity\n        this.setState({ choosedProduct: { ...this.state.choosedProduct, quantity: quantity, subtotal: subtotal } })\n\n    }\n\n    /*----EDIT PRODUCT----*/\n    updateProduct = () => {\n        this.productServices.updateProduct(this.props.match.params.id, this.state.product)\n            .then(theProduct => this.setState({ product: theProduct }))\n            .catch(err => console.log(err))\n    }\n\n    handleSubmit = async e => {\n        e.preventDefault()\n        await this.setVariants()\n        this.updateProduct()\n        this.toggleToast()\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            product: { ...this.state.product, [name]: value }\n        })\n    }\n\n    handleChangeVariant = e => {\n        let { name, value } = e.target\n        this.setState({\n            variant: { ...this.state.variant, [name]: value }\n        })\n    }\n\n    handleUpdateVariant = e => {\n\n        let { dataset } = e.target\n        let id = dataset.id\n        let modelCopy = [...this.state.modelPrev]\n\n        const inputArray = document.getElementById(id).querySelectorAll('td input')\n        let obj = {}\n        inputArray.forEach(elm => obj[elm.name] = elm.value)\n\n        modelCopy.splice(id, 1, obj)\n        this.setState({\n            modelPrev: modelCopy,\n        })\n    }\n\n    handleSubmitVariant = e => {\n        e.preventDefault()\n        let modelCopy = [...this.state.product.model]\n        modelCopy.push(this.state.variant)\n        this.setState({\n            modelPrev: modelCopy,\n            variant: {\n                size: '',\n                stock: 0,\n                price: 0\n            },\n            showmodal: false,\n        })\n\n    }\n\n    setVariants = () => {\n        console.log(this.state)\n        let modelCopy = [...this.state.modelPrev]\n        this.setState({\n            product: { ...this.state.product, model: modelCopy },\n        })\n\n    }\n\n    deleteVariant = idx => {\n        let modelCopy = [...this.state.modelPrev]\n        modelCopy.splice(idx, 1)\n        this.setState({\n            modelPrev: modelCopy\n        })\n    }\n\n    handleFileUpload = e => {\n        const uploadData = new FormData()\n        for (let key in e.target.files) {\n            uploadData.append(\"images\", e.target.files[key])\n        }\n        this.filesServices.handleUpload(uploadData)\n            .then(response => {\n                this.setState({\n                    product: { ...this.state.product, images: response.secure_url }\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n\n\n\n    toggleToast = () => this.setState({ showtoast: !this.state.showtoast })\n    toggleModal = () => this.setState({ showmodal: !this.state.showmodal })\n\n    mainImage = id => {\n        let imagesCopy = [...this.state.product.images]\n        let idx = id.idx\n        imagesCopy.unshift(imagesCopy.splice(idx, 1).toString())\n        this.setState({\n            product: { ...this.state.product, images: imagesCopy }\n        })\n\n    }\n\n    render() {\n        return (\n            <Container className=\"client-body\">\n                <Breadcrumbs product={this.state.product.name} category={this.state.product.category} />\n                <h1>{this.state.product.name}</h1>\n\n                <Form onSubmit={this.handleSubmit}>\n\n                    <Form.Group>\n                        <Form.Label>Nombre</Form.Label>\n                        <Form.Control type=\"text\" name=\"name\" value={this.state.product.name} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Descripción corta</Form.Label>\n                        <Form.Control type=\"text\" name=\"excerpt\" value={this.state.product.excerpt} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Row>\n                        <Form.Group as={Col}>\n                            <Form.Label>Categoría</Form.Label>\n                            <Form.Control type=\"text\" name=\"category\" value={this.state.product.category} onChange={this.handleChange} />\n                        </Form.Group>\n                        <Form.Group as={Col}>\n                            <Form.Label>Etiquetas de búsqueda</Form.Label>\n                            <Form.Control type=\"text\" name=\"tags\" value={this.state.product.tags} onChange={this.handleChange} />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Group>\n                        <Form.Label><h3>Imágenes</h3></Form.Label>\n                        <Form.Control className=\"m-2\" type=\"file\" name=\"images\" onChange={this.handleFileUpload} multiple />\n                        {/* {this.state.product.images !== 0 ? this.state.product.images.map((elm, idx) => <img className=\"m-3\" src={elm} key={idx} alt={idx} onClick={() => this.mainImage({ idx })} style={{ width: \"50px\" }} />) : 'No hay imágenes cargadas'} */}\n                    </Form.Group>\n\n                    <Row>\n                        <Col>\n                            {this.state.product.images !== 0 ? <img src={this.state.product.images[0]} alt=\"Imagen principal\" /> : <p>No hay imagen principal</p>}\n                        </Col>\n                        <Col>\n                            {this.state.product.images !== 0 ? this.state.product.images.map((elm, idx) => <img className=\"m-3\" src={elm} key={idx} alt={idx} onClick={() => this.mainImage({ idx })} style={{ width: \"50px\" }} />) : <p>No hay imágenes</p>}\n                        </Col>\n\n                    </Row>\n\n                </Form>\n                <Modal show={this.state.showmodal} onHide={this.toggleModal}>\n                    <Modal.Body>\n                        <Form onSubmit={this.handleSubmitVariant}>\n                            <Form.Group>\n                                <Form.Label>Medidas</Form.Label>\n                                <Form.Control type=\"text\" name=\"size\" value={this.state.variant.size} onChange={this.handleChangeVariant} />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Precio</Form.Label>\n                                <Form.Control type=\"number\" name=\"price\" value={this.state.variant.price} onChange={this.handleChangeVariant} />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Stock</Form.Label>\n                                <Form.Control type=\"number\" name=\"stock\" value={this.state.variant.stock} onChange={this.handleChangeVariant} />\n                            </Form.Group>\n                            <Button variant=\"dark\" type=\"submit\">Añadir nueva variante al producto</Button>\n                        </Form>\n                    </Modal.Body>\n                </Modal>\n                <h3 className=\"mt-5\">Variaciones</h3>\n                <Button className=\"mb-2\" variant=\"outline-dark\" onClick={this.toggleModal}>Crear nueva variación</Button>\n\n                <Table responsive striped bordered>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Medidas</th>\n                            <th>Stock</th>\n                            <th>Precio</th>\n                            <th>Acción</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.modelPrev.map((elm, idx) =>\n                            <tr id={idx} key={idx}>\n                                <td>{idx + 1}</td>\n                                <td><input type=\"text\" name=\"size\" className=\"size-width\" data-id={idx} value={elm.size} onChange={this.handleUpdateVariant} /></td>\n                                <td><input type=\"number\" name=\"stock\" data-id={idx} value={elm.stock} onChange={this.handleUpdateVariant} /></td>\n                                <td><input type=\"number\" name=\"price\" data-id={idx} value={elm.price} onChange={this.handleUpdateVariant} /></td>\n                                {/* <td><input type=\"number\" name=\"quantity\" value={this.state.choosedProduct.quantity} /></td> */}\n                                <td><Button variant=\"outline-danger\" className=\"mb-20\" onClick={() => this.deleteVariant(idx)}><DeleteForeverIcon fontSize=\"small\" /></Button></td>\n                                {/* <td><Button className=\"mb-20\" variant=\"outline-warning\" onClick={() => this.chooseProduct(elm._id, elm.price, elm.size)}>Elegir</Button></td> */}\n\n                            </tr>\n                        )}\n                    </tbody>\n                </Table>\n\n\n\n\n\n\n\n                <Button variant=\"outline-success\" type=\"submit\" size=\"lg\" block onClick={this.handleSubmit}>Modificar producto</Button>\n\n                <Toast onClose={() => this.toggleToast()} show={this.state.showtoast} delay={10000} autohide>\n                    <Toast.Header>\n                        <strong className=\"mr-auto\">El producto ha sido modificado</strong>\n                    </Toast.Header>\n                </Toast>\n                <Button as=\"div\" variant=\"dark\" size=\"sm\">\n                    <Link to=\"/admin/products-list\">Volver al listado de productos</Link>\n                </Button>\n\n                <div className=\"addToCart d-flex my-3 float-right\">\n                    <div className=\"quantity d-flex align-items-center\">\n                        <IconButton onClick={() => this.handleQuantity('rest')} aria-label=\"Restar cantidad\">\n                            <RemoveCircleOutlineIcon />\n                        </IconButton>\n                        {this.state.choosedProduct.quantity}\n                        <IconButton onClick={() => this.handleQuantity('sum')} aria-label=\"Sumar cantidad\">\n                            <AddCircleOutlineIcon />\n                        </IconButton>\n                    </div>\n                    <Button variant=\"warning\" size=\"medium\" onClick={() => this.addToCart(this.state.product._id)}>Comprar producto</Button>\n                </div>\n\n            </Container>\n\n\n        )\n    }\n}\n\nexport default ProductUpdate","import React from 'react'\n\n/* ----ROUTES----*/\nimport { Link } from 'react-router-dom'\n\nconst UserCard = ({ email, name, city, phone, role, _id }) => {\n    return (\n        <tr>\n            <td>{email}</td>\n            <td>{name}</td>\n            <td>{city}</td>\n            <td>{phone}</td>\n            <td>{role}</td>\n            <td><Link as=\"button\" className=\"mb-20 p-2 btn btn-outline-success\" to={`/cuenta/editar/${_id}`}>Modificar</Link></td>\n        </tr>\n    );\n}\n\nexport default UserCard","import React, { Component } from 'react'\n\n/* ----STYLING----*/\nimport '../admin.css';\n\n/* ----SERVICES----*/\nimport ProductsServices from '../../../../services/user.services'\n\n/* ----COMPONENTS----*/\nimport UserCard from './userCardList'\n\n/* ----ROUTES----*/\nimport { Link } from 'react-router-dom'\n\n/* ----STYLE COMPONENTS----*/\nimport Table from 'react-bootstrap/Table'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\n\nclass UserList extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            users: [],\n            showmodal: false\n        }\n        this.productServices = new ProductsServices()\n    }\n\n    componentDidMount = () => this.getAllUsers()\n\n    getAllUsers = () => {\n        this.productServices.getAllUsers()\n            .then(allUsers => this.setState({ users: allUsers }))\n            .catch(err => console.log(err))\n    }\n\n    // closeModal = () => this.setState({ showmodal: false })\n    // openModal = () => this.setState({ showmodal: true })\n\n    render() {\n\n        return (\n            <div className=\"admin-body\">\n                <Container className=\"pb-5\">\n\n                    <Row>\n                        <Col sm={8}>\n                            <h1>Listado de usuarios</h1>\n                        </Col>\n                        <Col sm={4}>\n                            {this.props.loggedInUser && <Link as=\"button\" className=\"mb-20 p-2 btn btn-outline-warning btn-block\" to=\"/admin/users/create\">Crear nuevo usuario</Link>}\n                        </Col>\n                    </Row>\n\n\n\n\n                    {this.state.users.length ? (\n\n                        <Table responsive striped bordered>\n                            <thead>\n                                <tr>\n                                    <th>Email</th>\n                                    <th>Nombre</th>\n                                    <th>Ciudad</th>\n                                    <th>Teléfono</th>\n                                    <th>Rol</th>\n                                    <th>Acción</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.state.users.map(elm => <UserCard key={elm._id} {...elm} />)}\n                            </tbody>\n                        </Table>\n\n                    )\n                        :\n                        <p>CARGANDO...</p>\n\n                    }\n\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default UserList","import React, { Component } from 'react'\n\n/* ----STYLING----*/\nimport '../admin.css';\nimport './userForm.css';\n\n/* ----SERVICES----*/\nimport UserServices from '../../../../services/user.services'\n\n/* ----STYLE COMPONENTS----*/\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\n\nclass UserForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.UserServices = new UserServices()\n        this.state = {\n            user: {\n                name: '',\n                lastName: '',\n                role: '',\n                street: '',\n                zipCode: '',\n                city: '',\n                state: '',\n                phone: '',\n            },\n\n        }\n    }\n\n    finishAction = () => {\n        this.setState({\n            user: {\n                name: '',\n                lastName: '',\n                role: '',\n                street: '',\n                zipCode: '',\n                city: '',\n                state: '',\n                phone: '',\n            },\n        })\n    }\n\n    postUser = () => {\n        this.UserServices.postUser(this.state.user)\n            .then(() => this.finishAction())\n            .catch(err => console.log(err))\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            user: { ...this.state.user, [name]: value }\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.postUser()\n    }\n\n    // deleteVariant = idx => {\n    //     let modelCopy = [...this.state.product.model]\n    //     modelCopy.splice(idx, 1)\n    //     this.setState({\n    //         product: { ...this.state.product, model: modelCopy }\n    //     })\n    // }\n\n    closeModal = () => this.setState({ showmodal: false })\n    openModal = () => this.setState({ showmodal: true })\n\n    render() {\n        return (\n            <div className=\"py-5 create-product\">\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Nombre</Form.Label>\n                        <Form.Control type=\"text\" name=\"name\" value={this.state.user.name} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Apellidos</Form.Label>\n                        <Form.Control type=\"text\" name=\"lastName\" value={this.state.user.lastName} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Rol</Form.Label>\n                        <Form.Control type=\"text\" name=\"role\" value={this.state.user.role} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Ciudad</Form.Label>\n                        <Form.Control type=\"text\" name=\"city\" value={this.state.user.city} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Código postal</Form.Label>\n                        <Form.Control type=\"text\" name=\"zipCode\" value={this.state.user.zipCode} onChange={this.handleChange} />\n                    </Form.Group>\n\n                </Form>\n                {/* \n\n                <Modal show={this.state.showmodal} onHide={this.closeModal}>\n                    <Modal.Body>\n                        <Form onSubmit={this.handleSubmitVariant}>\n                            <Form.Group>\n                                <Form.Label>Medida</Form.Label>\n                                <Form.Control type=\"text\" name=\"size\" value={this.state.variant.size} onChange={this.handleChangeVariant} />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control type=\"number\" name=\"price\" value={this.state.variant.price} onChange={this.handleChangeVariant} />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Stock</Form.Label>\n                                <Form.Control type=\"number\" name=\"stock\" value={this.state.variant.stock} onChange={this.handleChangeVariant} />\n                            </Form.Group>\n                            <Button variant=\"dark\" type=\"submit\" onSubmit={this.handleSubmitVariant}>Añadir nueva variante al producto</Button>\n                        </Form>\n                    </Modal.Body>\n                </Modal>\n                <h3>Variaciones</h3>\n                <Button className=\"mb-20\" variant=\"outline-light\" onClick={this.openModal}>Crear nueva variación</Button>\n\n                <Table striped bordered>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Size</th>\n                            <th>Stock</th>\n                            <th>Price</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.product.model.map((elm, idx) =>\n                            <tr key={idx}>\n                                <td>{idx + 1}</td>\n                                <td>{elm.size}</td>\n                                <td>{elm.stock}</td>\n                                <td>{elm.price}€</td>\n                                <td><Button className=\"mb-20\" variant=\"outline-danger\" onClick={() => this.deleteVariant(idx)}>Borrar</Button></td>\n                            </tr>\n                        )}\n                    </tbody>\n                </Table>\n                <hr></hr> */}\n                <Button variant=\"outline-success\" type=\"submit\" size=\"lg\" block onClick={this.handleSubmit}>Crear nuevo usuario</Button>\n            </div>\n        )\n    }\n}\n\nexport default UserForm","import React, { Component } from 'react'\n\n/* ----STYLE COMPONENTS----*/\nimport UserForm from '../userForm/userForm'\nimport Container from 'react-bootstrap/Container'\n\n\nclass CreateUser extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            products: [],\n            showmodal: false\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"admin-body\">\n                <Container>\n                    <h1 className=\"text-center\">Panel de creación de usuario</h1>\n                    <UserForm />\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default CreateUser","import React, { Component } from 'react'\n\n/* ----STYLING----*/\nimport '../shop.css'\n\n/* ----SERVICES----*/\nimport UserServices from '../../../../services/user.services'\n\n/* ----ROUTES----*/\n// import { Link } from 'react-router-dom'\n\n/* ----STYLE COMPONENTS----*/\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\n// import Form from 'react-bootstrap/Form'\n// import Toast from 'react-bootstrap/Toast'\n// import Table from 'react-bootstrap/Table'\n// import Modal from 'react-bootstrap/Modal'\nimport TextField from '@material-ui/core/TextField';\n\n\n\nclass UserUpdate extends Component {\n    constructor(props) {\n        super(props)\n        this.userServices = new UserServices()\n        this.state = {\n            user: {\n                email: '',\n                role: '',\n                name: '',\n                lastName: '',\n                street: '',\n                zipCode: '',\n                city: '',\n                state: '',\n                phone: '',\n                wishlist: [],\n                orders: [],\n            },\n            modelPrev: [],\n            showtoast: false,\n            showmodal: false,\n        }\n    }\n\n    componentDidMount = () => {\n        this.getUserDetails()\n    }\n\n    getUserDetails = () => {\n        this.userServices.getUserDetails(this.props.loggedInUser._id)\n            .then(theUser => this.setState({ user: theUser }))\n            .catch(err => console.log(err))\n    }\n\n    updateUser = () => {\n        this.userServices.updateUser(this.props.loggedInUser._id, this.state.user)\n            .then(theUser => this.setState({ user: theUser }))\n            .catch(err => console.log(err))\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.updateUser()\n        this.toggleToast()\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            user: { ...this.state.user, [name]: value }\n        })\n    }\n\n    // deleteVariant = idx => {\n    //     let modelCopy = [...this.state.modelPrev]\n    //     modelCopy.splice(idx, 1)\n    //     this.setState({\n    //         modelPrev: modelCopy\n    //     })\n    // }\n\n    toggleToast = () => this.setState({ showtoast: !this.state.showtoast })\n    toggleModal = () => this.setState({ showmodal: !this.state.showmodal })\n\n\n    render() {\n\n        return (\n            <Container className=\"client-body\">\n\n                <form onSubmit={this.handleSubmit} autoComplete=\"off\">\n                    <TextField className=\"mx-4\" id=\"standard-basic\" value={this.state.user.name} label=\"Nombre\" type=\"text\" name=\"name\" onChange={this.handleChange} />\n                    <TextField className=\"mx-4\" id=\"standard-basic\" value={this.state.user.lastName} label=\"Apellidos\" type=\"text\" name=\"lastName\" onChange={this.handleChange} />\n                    <TextField className=\"mx-4\" id=\"standard-basic\" value={this.state.user.role} label=\"Rol\" type=\"text\" name=\"role\" onChange={this.handleChange} />\n                    <TextField className=\"mx-4\" id=\"standard-basic\" value={this.state.user.city} label=\"Ciudad\" type=\"text\" name=\"city\" onChange={this.handleChange} />\n\n                </form>\n                <Button variant=\"outline-success\" type=\"submit\" size=\"lg\" block onClick={this.handleSubmit}>Modificar usuario</Button>\n\n                {/* <h1>{this.state.product.name}</h1>\n\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Nombre</Form.Label>\n                        <Form.Control type=\"text\" name=\"name\" value={this.state.product.name} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Descripción corta</Form.Label>\n                        <Form.Control type=\"text\" name=\"excerpt\" value={this.state.product.excerpt} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Categoría</Form.Label>\n                        <Form.Control type=\"text\" name=\"category\" value={this.state.product.category} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Etiquetas de búsqueda</Form.Label>\n                        <Form.Control type=\"text\" name=\"tags\" value={this.state.product.tags} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Imágenes</Form.Label>\n                        <Form.Control type=\"file\" name=\"images\" onChange={this.handleFileUpload} multiple />\n                        {this.state.product.images !== 0 ? this.state.product.images.map((elm, idx) => <img className=\"m-3\" src={elm} key={idx} alt={idx} onClick={() => this.mainImage({ idx })} style={{ width: \"50px\" }} />) : 'No hay imágenes cargadas'}\n                    </Form.Group>\n                </Form>\n                <Modal show={this.state.showmodal} onHide={this.toggleModal}>\n                    <Modal.Body>\n                        <Form onSubmit={this.handleSubmitVariant}>\n                            <Form.Group>\n                                <Form.Label>Medida</Form.Label>\n                                <Form.Control type=\"text\" name=\"size\" value={this.state.variant.size} onChange={this.handleChangeVariant} />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control type=\"number\" name=\"price\" value={this.state.variant.price} onChange={this.handleChangeVariant} />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Stock</Form.Label>\n                                <Form.Control type=\"number\" name=\"stock\" value={this.state.variant.stock} onChange={this.handleChangeVariant} />\n                            </Form.Group>\n                            <Button variant=\"dark\" type=\"submit\" onSubmit={this.handleSubmitVariant}>Añadir nueva variante al producto</Button>\n                        </Form>\n                    </Modal.Body>\n                </Modal>\n                <h3>Variaciones</h3>\n                <Button className=\"mb-20\" variant=\"outline-dark\" onClick={this.toggleModal}>Crear nueva variación</Button>\n\n                <Table responsive striped bordered>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Size</th>\n                            <th>Stock</th>\n                            <th>Price</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.modelPrev.map((elm, idx) =>\n                            <tr id={idx} key={idx}>\n                                <td>{idx + 1}</td>\n                                <td><input type=\"text\" name=\"size\" data-id={idx} value={elm.size} onChange={this.handleUpdateVariant} /></td>\n                                <td><input type=\"text\" name=\"stock\" data-id={idx} value={elm.stock} onChange={this.handleUpdateVariant} /></td>\n                                <td><input type=\"text\" name=\"price\" data-id={idx} value={elm.price} onChange={this.handleUpdateVariant} /></td>\n                                <td><Button className=\"mb-20\" variant=\"outline-danger\" onClick={() => this.deleteVariant(idx)}>Borrar</Button></td>\n                            </tr>\n                        )}\n                    </tbody>\n                </Table>\n\n\n\n\n\n\n\n                <Button variant=\"outline-success\" type=\"submit\" size=\"lg\" block onClick={this.handleSubmit}>Modificar producto</Button>\n\n                <Toast onClose={() => this.toggleToast()} show={this.state.showtoast} delay={3000} autohide>\n                    <Toast.Header>\n                        <strong className=\"mr-auto\">El usuario ha sido modificado correctamente</strong>\n                    </Toast.Header>\n                </Toast>\n                <Button as=\"div\" variant=\"dark\" size=\"sm\">\n                    <Link to=\"/\">Volver a tu cuenta</Link>\n                </Button> */}\n\n            </Container>\n\n\n        )\n    }\n}\n\nexport default UserUpdate","import React, { Component } from 'react'\n\n/* ----STYLING----*/\nimport '../shop.css'\nimport './productDetails.css'\n\n/* ----SERVICES----*/\nimport ProductServices from '../../../../services/product.services'\nimport UserServices from '../../../../services/user.services'\nimport FilesServices from '../../../../services/files.services'\nimport CartServices from '../../../../services/cart.services'\n\n/* ----ROUTES----*/\nimport { Link } from 'react-router-dom'\n\nimport Breadcrumbs from '../../../ui/Breadcrumbs'\n\n\n/* ----STYLE COMPONENTS----*/\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport Button from 'react-bootstrap/Button'\n// import Form from 'react-bootstrap/Form'\n// import Toast from 'react-bootstrap/Toast'\n// import Table from 'react-bootstrap/Table'\n// import Modal from 'react-bootstrap/Modal'\n/* ----ICONS---- */\nimport IconButton from '@material-ui/core/IconButton';\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\nclass ProductUpdate extends Component {\n\n    constructor(props) {\n        super(props)\n        this.productServices = new ProductServices()\n        this.userServices = new UserServices()\n        this.filesServices = new FilesServices()\n        this.cartServices = new CartServices()\n\n        this.state = {\n            product: {\n                name: '',\n                excerpt: '',\n                category: '',\n                tags: '',\n                images: [],\n                model: [],\n            },\n            variant: {\n                size: '',\n                stock: 0,\n                price: 0\n            },\n            user: {\n\n            },\n            cart: { _id: undefined, products: [], cartIconQuantity: 0 },\n            modelPrev: [],\n            choosedProduct: { product: '', model: '', price: 0, quantity: 1 },\n            mainImage: '',\n            showtoast: false,\n            showmodal: false,\n        }\n    }\n\n    componentDidMount = () => {\n        this.getProductDetails()\n        this.setState({ cart: this.props.userCart })\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.loggedInUser._id !== this.props.loggedInUser._id) this.setState({ user: this.props.loggedInUser })\n        if (prevProps.userCart._id !== this.props.userCart._id) this.setState({ cart: this.props.userCart })\n    }\n\n\n    /*----LOAD PRODUCTS----*/\n    getProductDetails = () => {\n        this.productServices.getProductDetails(this.props.match.params.id)\n            .then(theProduct => this.setState({ product: theProduct, mainImage: theProduct.images[0] }))\n            .then(() => this.setState({ modelPrev: [...this.state.product.model] }))\n            .catch(err => console.log(err))\n    }\n    /*----ADD TO CART----*/\n    addToCart = () => {\n\n        let cartCopy = { ...this.state.cart }\n        if (cartCopy.total === 0) {\n            cartCopy.products.push(this.state.choosedProduct)\n        }\n        else {\n            let arr = []\n            cartCopy.products.forEach(elm => arr.push(elm.model))\n            if (arr.includes(this.state.choosedProduct.model)) {\n                let idx = arr.indexOf(this.state.choosedProduct.model)\n                cartCopy.products[idx].quantity += this.state.choosedProduct.quantity\n                cartCopy.products[idx].subtotal = cartCopy.products[idx].quantity * cartCopy.products[idx].price\n            } else {\n                cartCopy.products.push(this.state.choosedProduct)\n            }\n        }\n\n        let actualQuantity = 0\n        cartCopy.total = 0\n        cartCopy.products.forEach(elm => { actualQuantity += elm.quantity; cartCopy.total += elm.subtotal })\n        cartCopy.cartIconQuantity = actualQuantity\n        // this.setState({cart: cartCopy }, () => { this.updateCart(); this.props.setTheCart(this.state.cart)})\n        this.updateCart(cartCopy)\n    }\n\n    updateCart = (cart) => {\n        this.cartServices.updateCart(this.state.cart._id, cart)\n            .then(theCart => {\n                this.setState({ cart: theCart }, () => this.props.setTheCart(this.state.cart))\n            })\n            .catch(err => console.log(err))\n    }\n\n    updateUser = () => {\n        let userCopy = this.state.user\n        userCopy.cart = this.state.cart\n        this.userServices.updateUser(this.props.loggedInUser._id, this.state.user)\n            .then(theUser => this.setState({ user: theUser }))\n            .catch(err => console.log(err))\n    }\n\n    chooseProduct = (idx, price, size) => {\n        let productSubTotal = price * this.state.choosedProduct.quantity\n        let choosedProductCopy = {\n            product: this.state.product._id,\n            model: idx,\n            productName: this.state.product.name,\n            modelSize: size,\n            price: price,\n            quantity: this.state.choosedProduct.quantity,\n            subtotal: productSubTotal\n        }\n        this.setState({ choosedProduct: choosedProductCopy }, () => console.log(this.state.choosedProduct))\n    }\n    handleQuantity = (action) => {\n        let quantity = this.state.choosedProduct.quantity\n        if (action === 'rest') { if (quantity > 1) { quantity-- } } else { if (quantity < 10) { quantity++ } }\n        let subtotal = this.state.choosedProduct.price * quantity\n        this.setState({ choosedProduct: { ...this.state.choosedProduct, quantity: quantity, subtotal: subtotal } })\n\n    }\n\n    /*----EDIT PRODUCT----*/\n    updateProduct = () => {\n        this.productServices.updateProduct(this.props.match.params.id, this.state.product)\n            .then(theProduct => this.setState({ product: theProduct }))\n            .catch(err => console.log(err))\n    }\n\n    handleSubmit = async e => {\n        e.preventDefault()\n        await this.setVariants()\n        this.updateProduct()\n        this.toggleToast()\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            product: { ...this.state.product, [name]: value }\n        })\n    }\n\n    handleChangeVariant = e => {\n        let { name, value } = e.target\n        this.setState({\n            variant: { ...this.state.variant, [name]: value }\n        })\n    }\n\n    handleUpdateVariant = e => {\n\n        let { dataset } = e.target\n        let id = dataset.id\n        let modelCopy = [...this.state.modelPrev]\n\n        const inputArray = document.getElementById(id).querySelectorAll('td input')\n        let obj = {}\n        inputArray.forEach(elm => obj[elm.name] = elm.value)\n\n        modelCopy.splice(id, 1, obj)\n        this.setState({\n            modelPrev: modelCopy,\n        })\n    }\n\n    handleSubmitVariant = e => {\n        e.preventDefault()\n        let modelCopy = [...this.state.product.model]\n        modelCopy.push(this.state.variant)\n        this.setState({\n            modelPrev: modelCopy,\n            variant: {\n                size: '',\n                stock: 0,\n                price: 0\n            },\n            showmodal: false,\n        })\n\n    }\n\n    setVariants = () => {\n        console.log(this.state)\n        let modelCopy = [...this.state.modelPrev]\n        this.setState({\n            product: { ...this.state.product, model: modelCopy },\n        })\n\n    }\n\n    deleteVariant = idx => {\n        let modelCopy = [...this.state.modelPrev]\n        modelCopy.splice(idx, 1)\n        this.setState({\n            modelPrev: modelCopy\n        })\n    }\n\n    handleFileUpload = e => {\n        const uploadData = new FormData()\n        for (let key in e.target.files) {\n            uploadData.append(\"images\", e.target.files[key])\n        }\n        this.filesServices.handleUpload(uploadData)\n            .then(response => {\n                this.setState({\n                    product: { ...this.state.product, images: response.secure_url }\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n\n\n\n    toggleToast = () => this.setState({ showtoast: !this.state.showtoast })\n    toggleModal = () => this.setState({ showmodal: !this.state.showmodal })\n\n    mainImage = id => {\n\n        let imageCopy = this.state.product.images[id.idx]\n        // let idx = id.idx\n        // imagesCopy.unshift(imagesCopy.splice(idx, 1).toString())\n        this.setState({\n            mainImage: imageCopy\n        })\n\n    }\n\n    render() {\n        return (\n\n            <Container className=\"client-body\">\n                <Row >\n                    <Col sm={12} md={6} className=\"product-img\">\n                        <img src={this.state.mainImage} style={{ width: \"100%\", height: \"400px\", padding: '5px', objectFit: 'cover' }} />\n                        {this.state.product.images.map((elm, idx) => <img src={elm} key={idx} alt={idx} onClick={() => this.mainImage({ idx })} style={{ width: \"100px\", height: '100px', objectFit: 'cover', padding: '5px' }} />)}\n                    </Col>\n                    {/* TO-DO PREGUNTAR COMO HACER PARA QUE AL CAMBIAR LA PANTALLA CAMBIE YA QUE CREO QUE HAY QUE CAMBIAR EL ESTADO */}\n                    {/* {window.innerWidth > 768 ? (<Col sm={12} md={6} className=\"product-img\">\n                        {this.state.product.images !== 0 ? this.state.product.images.map((elm, idx) => <img src={elm} key={idx} alt={idx} onClick={() => this.mainImage({ idx })} style={{ width: \"100%\" }} />) : 'No hay imágenes cargadas'}</Col>)\n                        : (<Col sm={12} md={6}>\n                            <img src={this.state.product.images[0]} style={{ width: \"100%\", height: \"400px\", padding: '5px', objectFit: 'cover' }} />\n                            {this.state.product.images.map((elm, idx) => <img src={elm} key={idx} alt={idx} onClick={() => this.mainImage({ idx })} style={{ width: \"100px\", height: '100px', objectFit: 'cover', padding: '5px' }} />)}\n                        </Col>)} */}\n\n                    <Col sm={12} md={6} className=\"product-main\">\n                        <Breadcrumbs product={this.state.product.name} category={this.state.product.category} />\n                        <h1>{this.state.product.name}</h1>\n                        <p>{this.state.product.excerpt}</p>\n                        {this.state.product.model.map((elm, idx) => <p key={elm.idx}>{elm.size}</p>)}\n                        <div className=\"addToCart d-flex my-3\">\n                            <div className=\"quantity d-flex align-items-center\">\n                                <IconButton onClick={() => this.handleQuantity('rest')} aria-label=\"Restar cantidad\">\n                                    <RemoveCircleOutlineIcon />\n                                </IconButton>\n                                {this.state.choosedProduct.quantity}\n                                <IconButton onClick={() => this.handleQuantity('sum')} aria-label=\"Sumar cantidad\">\n                                    <AddCircleOutlineIcon />\n                                </IconButton>\n                            </div>\n                            <Button variant=\"warning\" size=\"medium\" onClick={() => this.addToCart(this.state.product._id)}>Comprar producto</Button>\n                        </div>\n                    </Col>\n                </Row>\n\n\n            </Container>\n\n\n\n\n            // <Container className=\"client-body\">\n            //     <Breadcrumbs product={this.state.product.name} category={this.state.product.category} />\n            //     <h1>{this.state.product.name}</h1>\n\n            //     <Form onSubmit={this.handleSubmit}>\n            //         <Form.Group>\n            //             <Form.Label>Nombre</Form.Label>\n            //             <Form.Control type=\"text\" name=\"name\" value={this.state.product.name} onChange={this.handleChange} />\n            //         </Form.Group>\n            //         <Form.Group>\n            //             <Form.Label>Descripción corta</Form.Label>\n            //             <Form.Control type=\"text\" name=\"excerpt\" value={this.state.product.excerpt} onChange={this.handleChange} />\n            //         </Form.Group>\n            //         <Form.Group>\n            //             <Form.Label>Categoría</Form.Label>\n            //             <Form.Control type=\"text\" name=\"category\" value={this.state.product.category} onChange={this.handleChange} />\n            //         </Form.Group>\n            //         <Form.Group>\n            //             <Form.Label>Etiquetas de búsqueda</Form.Label>\n            //             <Form.Control type=\"text\" name=\"tags\" value={this.state.product.tags} onChange={this.handleChange} />\n            //         </Form.Group>\n            //         <Form.Group>\n            //             <Form.Label>Imágenes</Form.Label>\n            //             <Form.Control type=\"file\" name=\"images\" onChange={this.handleFileUpload} multiple />\n            //             {this.state.product.images !== 0 ? this.state.product.images.map((elm, idx) => <img className=\"m-3\" src={elm} key={idx} alt={idx} onClick={() => this.mainImage({ idx })} style={{ width: \"50px\" }} />) : 'No hay imágenes cargadas'}\n            //         </Form.Group>\n            //     </Form>\n            //     <Modal show={this.state.showmodal} onHide={this.toggleModal}>\n            //         <Modal.Body>\n            //             <Form onSubmit={this.handleSubmitVariant}>\n            //                 <Form.Group>\n            //                     <Form.Label>Medida</Form.Label>\n            //                     <Form.Control type=\"text\" name=\"size\" value={this.state.variant.size} onChange={this.handleChangeVariant} />\n            //                 </Form.Group>\n            //                 <Form.Group>\n            //                     <Form.Label>Price</Form.Label>\n            //                     <Form.Control type=\"number\" name=\"price\" value={this.state.variant.price} onChange={this.handleChangeVariant} />\n            //                 </Form.Group>\n            //                 <Form.Group>\n            //                     <Form.Label>Stock</Form.Label>\n            //                     <Form.Control type=\"number\" name=\"stock\" value={this.state.variant.stock} onChange={this.handleChangeVariant} />\n            //                 </Form.Group>\n            //                 <Button variant=\"dark\" type=\"submit\">Añadir nueva variante al producto</Button>\n            //             </Form>\n            //         </Modal.Body>\n            //     </Modal>\n            //     <h3>Variaciones</h3>\n            //     <Button className=\"mb-20\" variant=\"outline-dark\" onClick={this.toggleModal}>Crear nueva variación</Button>\n\n            //     <Table responsive striped bordered>\n            //         <thead>\n            //             <tr>\n            //                 <th>#</th>\n            //                 <th>Size</th>\n            //                 <th>Stock</th>\n            //                 <th>Price</th>\n            //                 <th>Action</th>\n            //             </tr>\n            //         </thead>\n            //         <tbody>\n            //             {this.state.modelPrev.map((elm, idx) =>\n            //                 <tr id={idx} key={idx}>\n            //                     <td>{idx + 1}</td>\n            //                     <td><input type=\"text\" name=\"size\" data-id={idx} value={elm.size} onChange={this.handleUpdateVariant} /></td>\n            //                     <td><input type=\"number\" name=\"stock\" data-id={idx} value={elm.stock} onChange={this.handleUpdateVariant} /></td>\n            //                     <td><input type=\"number\" name=\"price\" data-id={idx} value={elm.price} onChange={this.handleUpdateVariant} /></td>\n            //                     {/* <td><input type=\"number\" name=\"quantity\" value={this.state.choosedProduct.quantity} /></td> */}\n            //                     <td><Button className=\"mb-20\" variant=\"outline-danger\" onClick={() => this.deleteVariant(idx)}>Borrar</Button></td>\n            //                     <td><Button className=\"mb-20\" variant=\"outline-warning\" onClick={() => this.chooseProduct(elm._id, elm.price, elm.size)}>Elegir</Button></td>\n\n            //                 </tr>\n            //             )}\n            //         </tbody>\n            //     </Table>\n\n\n\n\n\n\n\n            //     <Button variant=\"outline-success\" type=\"submit\" size=\"lg\" block onClick={this.handleSubmit}>Modificar producto</Button>\n\n            //     <Toast onClose={() => this.toggleToast()} show={this.state.showtoast} delay={10000} autohide>\n            //         <Toast.Header>\n            //             <strong className=\"mr-auto\">El producto ha sido modificado</strong>\n            //         </Toast.Header>\n            //     </Toast>\n            //     <Button as=\"div\" variant=\"dark\" size=\"sm\">\n            //         <Link to=\"/admin/products/products-list\">Volver al listado de productos</Link>\n            //     </Button>\n\n            //     <div className=\"addToCart d-flex my-3 float-right\">\n            //         <div className=\"quantity d-flex align-items-center\">\n            //             <IconButton onClick={() => this.handleQuantity('rest')} aria-label=\"Restar cantidad\">\n            //                 <RemoveCircleOutlineIcon />\n            //             </IconButton>\n            //             {this.state.choosedProduct.quantity}\n            //             <IconButton onClick={() => this.handleQuantity('sum')} aria-label=\"Sumar cantidad\">\n            //                 <AddCircleOutlineIcon />\n            //             </IconButton>\n            //         </div>\n            //         <Button variant=\"warning\" size=\"medium\" onClick={() => this.addToCart(this.state.product._id)}>Comprar producto</Button>\n            //     </div>\n\n            // </Container>\n\n\n        )\n    }\n}\n\nexport default ProductUpdate","import React, { Component } from 'react'\n\n/* ----STYLING----*/\nimport './checkout.css';\n\n/* ----SERVICES----*/\nimport UserServices from '../../../../services/user.services'\n\n/* ----STYLE COMPONENTS----*/\n// import Container from 'react-bootstrap/Container'\n// import Button from 'react-bootstrap/Button'\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\n\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\n\n\n\nclass UserFormCheckout extends Component {\n\n    constructor(props) {\n        super(props)\n        this.UserServices = new UserServices()\n        this.state = {\n            user: {\n                name: '',\n                lastName: '',\n                address1: '',\n                address2: '',\n                zipCode: '',\n                city: '',\n                state: '',\n                country: '',\n                phone: '',\n            },\n\n        }\n    }\n\n    componentDidMount = () => {\n        this.setState({ user: this.props.loggedInUser })\n        console.log(this.state.user)\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.loggedInUser._id !== this.props.loggedInUser._id) this.setState({ user: this.props.loggedInUser })\n    }\n\n\n    updateUser = () => {\n        console.log('post user1', this.state.user)\n        this.UserServices.updateUser(this.state.user._id, this.state.user)\n            .then(theUser => console.log('post user2', theUser))\n            .catch(err => console.log(err))\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            user: { ...this.state.user, [name]: value }\n        })\n    }\n\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.updateUser()\n    }\n\n    // deleteVariant = idx => {\n    //     let modelCopy = [...this.state.product.model]\n    //     modelCopy.splice(idx, 1)\n    //     this.setState({\n    //         product: { ...this.state.product, model: modelCopy }\n    //     })\n    // }\n\n    closeModal = () => this.setState({ showmodal: false })\n    openModal = () => this.setState({ showmodal: true })\n\n    render() {\n        return (\n\n            <>\n                <Typography variant=\"h6\" gutterBottom>\n                    Dirección de envío\n                </Typography>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            required\n                            id=\"name\"\n                            name=\"name\"\n                            value={this.state.user.name}\n                            label=\"Nombre\"\n                            fullWidth\n                            autoComplete=\"fname\"\n                            onChange={this.handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            required\n                            id=\"lastName\"\n                            name=\"lastName\"\n                            value={this.state.user.lastName}\n                            label=\"Apellidos\"\n                            fullWidth\n                            autoComplete=\"lname\"\n                            onChange={this.handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            id=\"address1\"\n                            name=\"address1\"\n                            value={this.state.user.address1}\n                            label=\"Dirección 1\"\n                            fullWidth\n                            autoComplete=\"billing address-line1\"\n                            onChange={this.handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            id=\"address2\"\n                            name=\"address2\"\n                            value={this.state.user.address2}\n                            label=\"Dirección 2\"\n                            fullWidth\n                            autoComplete=\"billing address-line2\"\n                            onChange={this.handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={6} sm={6}>\n                        <TextField\n                            required\n                            id=\"city\"\n                            name=\"city\"\n                            value={this.state.user.city}\n                            label=\"Ciudad\"\n                            fullWidth\n                            autoComplete=\"billing address-level2\"\n                            onChange={this.handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={6} sm={6}>\n                        <TextField id=\"state\" name=\"state\" label=\"Provincia/Región\" fullWidth />\n                    </Grid>\n                    <Grid item xs={6} sm={6}>\n                        <TextField\n                            required\n                            id=\"zipCode\"\n                            name=\"zipCode\"\n                            value={this.state.user.zipCode}\n                            label=\"Código postal\"\n                            fullWidth\n                            autoComplete=\"billing postal-code\"\n                            onChange={this.handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={6} sm={6}>\n                        <TextField\n                            required\n                            id=\"country\"\n                            name=\"country\"\n                            value={this.state.user.country}\n                            label=\"País\"\n                            fullWidth\n                            autoComplete=\"billing country\"\n                            onChange={this.handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            required\n                            id=\"phone\"\n                            name=\"phone\"\n                            value={this.state.user.phone}\n                            label=\"Teléfono\"\n                            fullWidth\n                            type=\"tel\"\n                            autoComplete=\"billing country\"\n                            onChange={this.handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        {/* <FormControlLabel\n                            control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\n                            label=\"Usa esta dirección para la factura\"\n                        /> */}\n                    </Grid>\n                    <Button onClick={this.handleSubmit} variant=\"outlined\" className=\"mx-auto mt-4\" size=\"small\" startIcon={<SaveIcon />}>\n                        Guardar dirección\n                    </Button>\n                    {/* <Button className=\"mx-auto mt-2\" variant=\"outline-dark\">Guardar dirección</Button> */}\n                </Grid>\n            </>\n        )\n    }\n}\n\nexport default UserFormCheckout","import React, { Component } from 'react'\n\n/* ----STYLING----*/\nimport '../shop.css'\nimport './checkout.css'\n\n\n/* ----SERVICES----*/\nimport ProductServices from '../../../../services/product.services'\nimport UserServices from '../../../../services/user.services'\nimport CartServices from '../../../../services/cart.services'\n\n/* ----ROUTES----*/\nimport { Link } from 'react-router-dom'\n\nimport CartDetails from '../cartDetails/cartDetails'\nimport UserFormCheckout from './userFormCheckout'\n// import { Link } from 'react-router-dom'\n\n/* ----STYLE COMPONENTS----*/\nimport Container from 'react-bootstrap/Container'\n\n/* ----ICONS---- */\n// import IconButton from '@material-ui/core/IconButton';\n// import RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\n// import AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n// import DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\n\nclass Checkout extends Component {\n\n    constructor(props) {\n        super(props)\n        this.productServices = new ProductServices()\n        this.userServices = new UserServices()\n        this.cartServices = new CartServices()\n\n        this.state = {\n            user: {},\n            cart: {},\n            choosedProduct: { product: '', model: '', quantity: 1 },\n            showtoast: false,\n            showmodal: false,\n        }\n    }\n\n\n    componentDidMount = () => {\n\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.userCart._id !== this.props.userCart._id) this.setState({ cart: this.props.userCart })\n    }\n\n\n    handleQuantity = (action, id) => {\n        let cartCopy = { ...this.state.cart }\n\n        let quantity = cartCopy.products[id].quantity\n\n\n        if (action === 'rest') { if (quantity > 1) { quantity-- } } else { if (quantity < 10) { quantity++ } }\n        cartCopy.products[id].quantity = quantity\n        cartCopy.products[id].subtotal = cartCopy.products[id].price * quantity\n        cartCopy.total = cartCopy.cartIconQuantity = 0\n        cartCopy.products.forEach(elm => { cartCopy.total += elm.subtotal; cartCopy.cartIconQuantity += elm.quantity })\n        // this.setState({ cart: cartCopy }, () => { this.updateCart(); this.props.setTheCart(this.state.cart) })\n        this.updateCart(cartCopy)\n    }\n\n    deleteFromCart = (idx) => {\n        let cartCopy = { ...this.state.cart }\n        cartCopy.products.splice(idx, 1)\n        this.updateCart(cartCopy)\n\n    }\n\n    updateCart = (cart) => {\n        this.cartServices.updateCart(this.state.cart._id, cart)\n            .then(theCart => {\n                this.setState({ cart: theCart }, () => this.props.setTheCart(this.state.cart))\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    /*----LOAD PRODUCTS----*/\n    // getProductDetails = () => {\n    //     this.productServices.getProductDetails(this.props.match.params.id)\n    //         .then(theProduct => this.setState({ product: theProduct }))\n    //         .then(() => this.setState({ modelPrev: [...this.state.product.model] }))\n    //         .catch(err => console.log(err))\n    // }\n\n    /*----UPDATE USER----*/\n    // updateUser = () => {\n    //     let userCopy = this.state.user\n    //     userCopy.cart = this.state.cart\n    //     this.userServices.updateUser(this.props.loggedInUser._id, this.state.user)\n    //         .then(theUser => this.setState({ user: theUser }))\n    //         .catch(err => console.log(err))\n    // }\n\n\n    /*----EDIT PRODUCT----*/\n    // updateProduct = () => {\n    //     this.productServices.updateProduct(this.props.match.params.id, this.state.product)\n    //         .then(theProduct => this.setState({ product: theProduct }))\n    //         .catch(err => console.log(err))\n    // }\n\n    // handleSubmit = async e => {\n    //     e.preventDefault()\n    //     await this.setVariants()\n    //     this.updateProduct()\n    //     this.toggleToast()\n    // }\n\n    // handleChange = e => {\n    //     let { name, value } = e.target\n    //     this.setState({\n    //         product: { ...this.state.product, [name]: value }\n    //     })\n    // }\n\n\n\n    render() {\n\n        return (\n\n            <Container className=\"container-checkout\">\n\n                <Link to={`/login`}>Haz clic aquí para iniciar sesión</Link>\n\n                <h1 className=\"mt-3 text-center\">Finalizar compra</h1>\n                <section className=\"mt-3\">\n                    <UserFormCheckout loggedInUser={this.props.loggedInUser} setTheCart={this.props.setTheCart} userCart={this.props.userCart} />\n                </section>\n                <section>\n                    <CartDetails loggedInUser={this.props.loggedInUser} setTheCart={this.props.setTheCart} userCart={this.props.userCart} />\n                </section>\n            </Container>\n\n\n\n\n\n            // <Container className=\"client-body\">\n            //     <h1 className=\"text-center text-uppercase\">Carrito</h1>\n            //     <TableContainer component={Paper}>\n            //         <Table style={{ padding: \"5px\" }} aria-label=\"spanning table\">\n            //             <TableHead>\n            //                 <TableRow>\n            //                     <TableCell>Productos</TableCell>\n            //                     <TableCell align=\"center\">Cantidad</TableCell>\n            //                     <TableCell align=\"center\">Precio unitario</TableCell>\n            //                     <TableCell align=\"right\">Subtotal</TableCell>\n            //                     <TableCell align=\"center\"></TableCell>\n            //                 </TableRow>\n            //             </TableHead>\n            //             <TableBody>\n            //                 {this.props.userCart.products.map((elm, idx) => (\n            //                     <TableRow key={idx}>\n            //                         <TableCell>{elm.productName} | {elm.modelSize}</TableCell>\n            //                         <TableCell align=\"center\">\n            //                             <div className=\"d-flex align-items-center justify-content-center\">\n            //                                 <IconButton onClick={() => this.handleQuantity('rest', idx)} aria-label=\"Restar cantidad\">\n            //                                     <RemoveCircleOutlineIcon />\n            //                                 </IconButton>\n            //                                 {elm.quantity}\n            //                                 <IconButton onClick={() => this.handleQuantity('sum', idx)} aria-label=\"Sumar cantidad\">\n            //                                     <AddCircleOutlineIcon />\n            //                                 </IconButton>\n            //                             </div>\n            //                         </TableCell>\n            //                         <TableCell align=\"center\">{elm.price}€</TableCell>\n            //                         <TableCell align=\"right\">{elm.subtotal}€</TableCell>\n            //                         <TableCell align=\"center\"><IconButton color=\"secondary\" onClick={() => this.deleteFromCart(idx)} aria-label=\"Borrar\">\n            //                             <DeleteOutlinedIcon />\n            //                         </IconButton></TableCell>\n            //                     </TableRow>\n            //                 ))}\n            //                 <TableRow>\n            //                     <TableCell colSpan={2}><strong>Total</strong></TableCell>\n            //                     <TableCell align=\"right\"></TableCell>\n            //                     <TableCell align=\"right\"><strong>{this.state.cart.total}€</strong></TableCell>\n            //                 </TableRow>\n            //             </TableBody>\n            //         </Table>\n            //     </TableContainer>\n            // </Container>\n\n\n        )\n    }\n}\n\nexport default Checkout","import React from 'react'\n\n/* ----ROUTES----*/\nimport { Link } from 'react-router-dom'\n\n/* ----STYLE----*/\nimport './productList.css'\n/* ----STYLE COMPONENTS----*/\nimport { makeStyles } from '@material-ui/core/styles';\n// import Card from '@material-ui/core/Card';\nimport Card from 'react-bootstrap/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Col from 'react-bootstrap/Col'\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 140,\n    },\n});\n\nexport default function MediaCard({ name, images, excerpt, category, tags, model, _id, deleteProduct }) {\n\n    const classes = useStyles();\n\n    return (\n\n\n        <Col className=\"col-card-shop\" xs={6} md={4} lg={3}>\n            <Card className=\"product-card-shop\">\n                <div className=\"position-relative\">\n                    <Link to={`/productos/${_id}`}><Card.Img variant=\"top\" src={images[0]} /></Link>\n                    {/* <p className=\"btn addCartList\">Añadir a la cesta</p> */}\n                </div>\n\n                <Card.Body>\n                    <Link to={`/productos/${_id}`}><Card.Title>{name}</Card.Title></Link>\n                    <Card.Text className=\"product-list-price\">{model[0].price} €</Card.Text>\n                    {/* <Button variant=\"primary\">Go somewhere</Button> */}\n                </Card.Body>\n            </Card>\n        </Col>\n\n\n        // <Col xs={6} md={3}>\n        //     <Card className={classes.root}>\n        //         <CardActionArea>\n        //             <CardMedia\n        //                 className={classes.media}\n        //                 image={images[0]}\n        //                 title={name} />\n        //             <CardContent>\n        //                 <Typography gutterBottom variant=\"h5\" component=\"h2\">\n        //                     {name}\n        //                 </Typography>\n        //                 {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        //                 Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n        //                 across all continents except Antarctica\n        //             </Typography> */}\n        //             </CardContent>\n        //         </CardActionArea>\n        //         <CardActions>\n        //             <Button size=\"small\" color=\"primary\">\n        //                 Share\n        // </Button>\n        //             <Button size=\"small\" color=\"primary\">\n        //                 Learn More\n        // </Button>\n        //         </CardActions>\n        //     </Card>\n        // </Col>\n\n    );\n}\n\n// const ProductCard = ({ name, images, excerpt, category, tags, model, _id, deleteProduct }) => {\n\n//     return (\n\n\n//         <tr className=\"product-card-shop\">\n//             <td><img src={images[0]} alt={name} /></td>\n//             <td>{name}</td>\n//             <td>{category}</td>\n//             <td className=\"d-flex\">\n//                 <Link as=\"button\" className=\"p-2 my-2 btn btn-outline-info\" to={`/admin/edit-product/${_id}`}><EditIcon fontSize=\"small\" /></Link>\n//                 <Button variant=\"outline-danger\" className=\"ml-2 my-2 p-2\" onClick={deleteProduct}><DeleteForeverIcon fontSize=\"small\" /></Button>\n//             </td>\n//         </tr>\n//     );\n// }\n\n// export default ProductCard","import React, { Component } from 'react'\n\n/* ----STYLING----*/\nimport '../shop.css';\n// import './productList.css'\n\n/* ----SERVICES----*/\nimport ProductsServices from '../../../../services/product.services'\n\n/* ----ROUTES----*/\nimport { Link } from 'react-router-dom'\n\n/* ----STYLE COMPONENTS----*/\nimport ProductCard from './productCardList'\nimport Table from 'react-bootstrap/Table'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Spinner from 'react-bootstrap/Spinner'\n\nclass ShopProductsList extends Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            products: [],\n            showmodal: false,\n        }\n        this.productServices = new ProductsServices()\n    }\n\n    componentDidMount = () => this.getAllProducts()\n\n    getAllProducts = () => {\n        this.productServices.getAllProducts()\n            .then(allProducts => this.setState({ products: allProducts }))\n            .catch(err => console.log(err))\n    }\n\n    deleteProduct = (id) => {\n        this.productServices.deleteProduct(id)\n            .then(() => this.getAllProducts())\n            .catch(err => console.log(err))\n    }\n\n    searchProduct = (value) => {\n        this.productServices.searchProduct(value)\n            .then(allProducts => this.setState({ products: allProducts }))\n            .catch(err => console.log(err))\n    }\n\n    handleChangeSearch = e => {\n        let { value } = e.target\n        this.searchProduct(value)\n    }\n\n    render() {\n\n        return (\n\n            <div className=\"client-body\">\n                <Container className=\"pb-5\">\n\n                    <Row className=\"mb-3\">\n                        <Col sm={8}>\n                            <h1>Listado de productos</h1>\n                        </Col>\n                        <Col sm={4}>\n\n                            {this.props.loggedInUser && <Link className=\"float-right mobile-button\" to=\"/admin/products/create\">\n\n                                <Fab style={{ backgroundColor: '#4caf50' }} aria-label=\"add\">\n                                    <AddIcon />\n                                </Fab></Link>}\n                        </Col>\n                    </Row>\n                    <input className=\"form-control mr-sm-2 mb-2\" value={this.productsSearched} type=\"search\" name=\"search\" placeholder=\"Buscar\" aria-label=\"Search\"\n                        id=\"index-input\" onChange={this.handleChangeSearch} />\n\n                    <p className=\"d-flex justify-content-end\">{this.state.products.length} Artículos</p>\n\n                    {this.state.products.length ? (\n\n                        <Row className=\"my-2\">\n                            {this.state.products.map(elm => <ProductCard key={elm._id} {...elm} deleteProduct={() => this.deleteProduct(elm._id)} />)}\n                        </Row>\n\n                    )\n                        :\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Cargando...</span>\n                        </Spinner>\n\n                    }\n\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default ShopProductsList","import React, { Component } from 'react';\n\n/* -- styling ---*/\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport AuthServices from './services/auth.services'\nimport CartServices from './services/cart.services'\nimport UserServices from './services/user.services'\n\n\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\nimport NavBar from './components/ui/NavBar'\n\nimport Home from './components/pages/shop/home/home'\nimport Signup from './components/pages/auth/signup/Signup'\nimport Login from './components/pages/auth/login/Login'\nimport CreateProduct from './components/pages/admin/createProduct/createProduct'\nimport ProductsList from './components/pages/admin/productList/productList'\nimport EditProduct from './components/pages/admin/editProduct/editProduct'\n\nimport UsersList from './components/pages/admin/userList/userList'\nimport CreateUser from './components/pages/admin/createUser/createUser'\nimport UserUpdate from './components/pages/shop/userUpdate/userUpdate'\nimport ProductDetails from './components/pages/shop/productDetails/productDetails';\nimport CartDetails from './components/pages/shop/cartDetails/cartDetails'\nimport Checkout from './components/pages/shop/checkout/checkout'\nimport ShopProductsList from './components/pages/shop/productList/shopProductList'\n\n\n\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = { loggedInUser: false, userCart: { products: [], total: 0, cartIconQuantity: 0 } }\n    this.authServices = new AuthServices()\n    this.cartServices = new CartServices()\n    this.userServices = new UserServices()\n\n  }\n\n\n  componentDidUpdate = (prevProps, prevState) => console.log('DidUpdate App', this.state)\n  componentDidMount = () => this.fetchUser()\n\n\n  setTheUser = userObj => this.setState({ loggedInUser: userObj })\n\n  fetchUser = () => {\n    let localCartId = localStorage.getItem('guestCart')\n    this.authServices.loggedin()\n      .then(theUser => { this.setState({ loggedInUser: theUser }); theUser.cart ? this.fetchCart(theUser.cart) : this.postCart(this.state.userCart) })\n      // .then(() => { this.state.loggedInUser.cart ? this.fetchCart(this.state.loggedInUser.cart) : this.postCart() })\n      .catch(() => { this.setState({ loggedInUser: false }); localCartId ? this.fetchCart(localCartId) : this.postCart(this.state.userCart) })\n  }\n\n  // if (this.props.userCart.length === 0) this.postCart()\n\n  setTheCart = userCart => this.setState({ userCart: userCart })\n\n  postCart = () => {\n    this.cartServices.postCart(this.state.userCart)\n      .then(theCart => this.setState({ userCart: { ...this.state.userCart, _id: theCart._id } }))\n      .then(() => this.state.loggedInUser ? this.updateUser() : localStorage.setItem('guestCart', this.state.userCart._id))\n      .catch(err => console.log(err))\n  }\n\n  updateUser = () => {\n    let userCopy = this.state.loggedInUser\n    userCopy.cart = this.state.userCart\n    this.userServices.updateUser(this.state.loggedInUser._id, userCopy)\n      .then(theUser => this.setState({ loggedInUser: theUser }))\n      .catch(err => console.log(err))\n  }\n\n  fetchCart = cartId => {\n    this.cartServices.getUserCart(cartId)\n      .then(theCart => this.setState({ userCart: theCart }))\n      .catch(() => this.postCart(this.state.userCart))\n\n    // .catch(() => this.setState({ userCart: false }))\n  }\n\n\n  render() {\n\n    return (\n      <div className=\"App-header\">\n        <NavBar setTheUser={this.setTheUser} loggedInUser={this.state.loggedInUser} setTheCart={this.setTheCart} userCart={this.state.userCart} />\n        <main>\n          <Switch>\n            <Route exact path=\"/\" render={() => <Home loggedInUser={this.state.loggedInUser} />} />\n            <Route path=\"/signup\" render={() => <Signup setTheUser={this.setTheUser} />} />\n            <Route path=\"/login\" render={props => <Login setTheUser={this.setTheUser} {...props} />} />\n            <Route path=\"/admin/products/create\" render={() => this.state.loggedInUser ? <CreateProduct loggedInUser={this.state.loggedInUser} /> : <Redirect to=\"/\" />} />\n            <Route path=\"/admin/products-list\" render={() => this.state.loggedInUser ? <ProductsList loggedInUser={this.state.loggedInUser} /> : <Redirect to=\"/\" />} />\n            <Route path=\"/admin/editar-producto/:id\" render={props => <EditProduct loggedInUser={this.state.loggedInUser} setTheCart={this.setTheCart} userCart={this.state.userCart} {...props} />} />\n\n            <Route path=\"/productos/:id\" render={props => <ProductDetails loggedInUser={this.state.loggedInUser} setTheCart={this.setTheCart} userCart={this.state.userCart} {...props} />} />\n            <Route path=\"/coleccion\" render={() => this.state.loggedInUser ? <ProductsList loggedInUser={this.state.loggedInUser} /> : <ShopProductsList loggedInUser={this.state.loggedInUser} />} />\n\n            <Route path=\"/cart\" render={props => <CartDetails loggedInUser={this.state.loggedInUser} setTheCart={this.setTheCart} userCart={this.state.userCart} {...props} />} />}\n            <Route path=\"/checkout\" render={props => <Checkout loggedInUser={this.state.loggedInUser} setTheCart={this.setTheCart} userCart={this.state.userCart} {...props} />} />}\n\n            <Route path=\"/admin/users/users-list\" render={() => this.state.loggedInUser ? <UsersList loggedInUser={this.state.loggedInUser} /> : <Redirect to=\"/\" />} />\n            <Route path=\"/admin/users/create-user\" render={() => this.state.loggedInUser ? <CreateUser loggedInUser={this.state.loggedInUser} /> : <Redirect to=\"/\" />} />\n            <Route path=\"/cuenta/editar/:id\" render={() => this.state.loggedInUser ? <UserUpdate loggedInUser={this.state.loggedInUser} /> : <Redirect to=\"/\" />} />\n          </Switch>\n        </main>\n      </div>\n\n    )\n  }\n}\n\n\nexport default App","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { BrowserRouter as Router } from 'react-router-dom'\n\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n    , document.getElementById('root'))"],"sourceRoot":""}