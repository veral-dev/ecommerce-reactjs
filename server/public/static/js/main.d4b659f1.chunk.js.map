{"version":3,"sources":["services/auth.services.js","services/cart.services.js","components/ui/NavBar.js","services/product.services.js","services/files.services.js","components/pages/admin/productForm/productForm.js","components/pages/shop/home/home.js","components/pages/auth/signup/Signup.js","components/pages/auth/login/Login.js","components/pages/admin/createProduct/createProduct.js","components/pages/admin/productList/productCardList.js","components/pages/admin/productList/productList.js","services/user.services.js","components/pages/admin/userList/userCardList.js","components/pages/admin/userList/userList.js","components/pages/admin/userForm/userForm.js","components/pages/admin/createUser/createUser.js","components/pages/shop/userUpdate/userUpdate.js","components/pages/shop/productDetails/productDetails.js","App.js","index.js"],"names":["Services","signup","email","password","service","post","then","response","data","login","logout","loggedin","get","this","axios","create","baseURL","process","withCredentials","getAllCarts","getUserCart","cartId","postCart","cart","updateCart","id","put","deleteCart","delete","searchCart","search","Navigation","props","authServices","setTheUser","catch","err","console","log","state","cartMenu","AuthServices","greeting","loggedInUser","name","Navbar","bg","expand","variant","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Link","as","to","onClick","Button","aria-haspopup","Menu","anchorEl","open","MenuItem","Component","getAllProducts","getProductDetails","postProduct","product","updateProduct","deleteProduct","searchProduct","handleUpload","theFile","ProductForm","finishAction","setState","excerpt","category","tags","images","model","ProductServices","handleChange","e","target","value","handleSubmit","preventDefault","handleChangeVariant","handleSubmitVariant","modelCopy","push","size","stock","price","showmodal","deleteVariant","idx","splice","handleFileUpload","uploadData","FormData","key","files","append","filesServices","secure_url","toggleModal","ProductsServices","FilesServices","Form","onSubmit","Group","Label","Control","type","onChange","multiple","map","elm","src","alt","style","width","Modal","show","onHide","Body","Table","striped","bordered","block","Home","closeModal","openModal","products","Container","Signup","postUser","theLoggedNewUser","errorMessage","component","maxWidth","CssBaseline","Avatar","backgroundColor","Typography","Grid","container","spacing","item","xs","TextField","margin","required","fullWidth","label","autoComplete","autoFocus","inputProps","title","pattern","FormControlLabel","control","Checkbox","color","justify","Login","theLoggedUser","history","Box","mt","CreateProduct","ProductCard","_id","fontSize","ProductsList","componentDidMount","productServices","allProducts","handleChangeSearch","Row","Col","sm","Fab","aria-label","productsSearched","placeholder","length","responsive","getAllUsers","getUserDetails","user","updateUser","deleteUser","searchUser","UserCard","city","phone","role","UserList","allUsers","users","UserForm","lastName","street","zipCode","UserServices","Userervices","CreateUser","UserUpdate","userServices","theUser","toggleToast","showtoast","wishlist","orders","modelPrev","ProductUpdate","userCart","match","params","theProduct","addToCart","cartCopy","total","choosedProduct","quantity","forEach","includes","setTheCart","cartServices","theCart","localStorage","setItem","chooseProduct","choosedProductCopy","a","setVariants","handleUpdateVariant","dataset","inputArray","document","getElementById","querySelectorAll","obj","mainImage","imagesCopy","unshift","toString","CartServices","undefined","prevProps","data-id","Toast","onClose","delay","autohide","Header","App","componentDidUpdate","prevState","fetchUser","userObj","localCartId","getItem","fetchCart","NavBar","exact","path","render","ReactDOM"],"mappings":"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","file":"static/js/main.d4b659f1.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/auth`,\n            withCredentials: true\n        })\n    }\n\n    signup = ({ email, password }) => this.service.post('/signup', { email, password }).then(response => response.data)\n    login = ({ email, password }) => this.service.post('/login', { email, password }).then(response => response.data)\n    logout = () => this.service.post('/logout').then(response => response.data)\n    loggedin = () => this.service.get('/loggedin').then(response => response.data)\n}","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/carts`,\n            withCredentials: true\n        })\n    }\n\n    getAllCarts = () => this.service.get('/getAllCarts').then(response => response.data)\n    getUserCart = cartId => this.service.get(`/getUserCart/${cartId}`).then(response => response.data)\n    postCart = cart => this.service.post(`/new`, cart).then(response => response.data)\n    updateCart = (id, cart) => this.service.put(`/update/${id}`, cart).then(response => response.data)\n    deleteCart = (id) => this.service.delete(`/delete/${id}`).then(response => response.data)\n    searchCart = (search) => this.service.post(`/search`, { search }).then(response => response.data)\n}","import React, { Component } from 'react'\n\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\n\nimport AuthServices from '../../services/auth.services'\n\nimport { Link } from 'react-router-dom'\n\n\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nclass Navigation extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            cartMenu: false,\n        }\n        this.authServices = new AuthServices()\n    }\n\n    logout = () => {\n        this.authServices.logout()\n            .then(response => {\n                this.props.setTheUser(false)\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    render() {\n\n        const greeting = this.props.loggedInUser ? <>Hola, {this.props.loggedInUser.name}</> : <>Hola, invitad@</>\n\n\n        return (\n\n\n            this.props.loggedInUser ?\n                (\n                    <>\n                        <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\n                            <Navbar.Brand href=\"#home\">Relakso e-Commerce</Navbar.Brand>\n                            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                            <Navbar.Collapse id=\"basic-navbar-nav\">\n                                <Nav className=\"ml-auto\">\n                                    <Nav.Link as=\"div\"> <Link to=\"/\">Inicio</Link></Nav.Link>\n                                    <Nav.Link as=\"div\"> <Link to=\"/profile\">Perfil</Link></Nav.Link>\n                                    <Nav.Link as=\"div\"> <Link to=\"/admin/products/create\">Crear producto</Link></Nav.Link>\n                                    <Nav.Link as=\"div\"> <Link to=\"/admin/products/products-list\">Lista de productos</Link></Nav.Link>\n                                    <Nav.Link as=\"div\"> <Link to=\"/admin/users/users-list\">Lista de usuarios</Link></Nav.Link>\n                                    <Nav.Link as=\"div\"> <Link to=\"/admin/users/create-user\">Crear usuario</Link></Nav.Link>\n                                    <Nav.Link as=\"div\"> <Link to=\"/cuenta/editar\">Editar mi cuenta</Link></Nav.Link>\n                                    <Nav.Link onClick={this.logout}>Cerrar sesión</Nav.Link>\n                                    <Nav.Link as=\"div\">{greeting}</Nav.Link>\n                                    <Button aria-controls=\"fade-menu\" aria-haspopup=\"false\">\n                                        Open cart{this.state.cartMenu}\n                                    </Button>\n                                </Nav>\n                            </Navbar.Collapse>\n                        </Navbar>\n\n                        <Menu\n                            id=\"fade-menu\"\n                            anchorEl='true'\n                            open={this.state.cartMenu}\n                        >\n                            <p>holasdaiohfejbwefjlflkfdklndfaldklnfklnd adfkfaddf dfoadf nadf ofojan kafoi hefon adfoknadfn  </p>\n                            <MenuItem >Profile</MenuItem>\n                            <MenuItem >My account</MenuItem>\n                            <MenuItem >Logout</MenuItem>\n                        </Menu>\n                    </>\n                )\n                :\n                (\n                    <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\n                        <Navbar.Brand href=\"#home\">Relakso e-Commerce</Navbar.Brand>\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                            <Nav className=\"ml-auto\">\n                                <Nav.Link as=\"div\"> <Link to=\"/\">Inicio</Link></Nav.Link>\n                                <Nav.Link as=\"div\"> <Link to=\"/signup\">Registro</Link></Nav.Link>\n                                <Nav.Link as=\"div\"> <Link to=\"/login\">Inicio sesión</Link></Nav.Link>\n                                <Nav.Link as=\"div\">{greeting}</Nav.Link>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Navbar>\n                )\n\n\n        )\n    }\n}\n\nexport default Navigation","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/products`,\n            withCredentials: true\n        })\n    }\n\n    getAllProducts = () => this.service.get('/getAllProducts').then(response => response.data)\n    getProductDetails = id => this.service.get(`/getOneProduct/${id}`).then(response => response.data)\n    postProduct = product => this.service.post(`/new`, product).then(response => response.data)\n    updateProduct = (id, product) => this.service.put(`/update/${id}`, product).then(response => response.data)\n    deleteProduct = (id) => this.service.delete(`/delete/${id}`).then(response => response.data)\n    searchProduct = (search) => this.service.post(`/search`, { search }).then(response => response.data)\n}","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/files`,\n            withCredentials: true\n        })\n    }\n\n    handleUpload = theFile => this.service.post('/upload', theFile).then(response => response.data)\n}","import React, { Component } from 'react'\n\n/* ----STYLING----*/\nimport '../admin.css';\nimport './productForm.css';\n\n/* ----SERVICES----*/\nimport ProductsServices from '../../../../services/product.services'\nimport FilesServices from '../../../../services/files.services'\n\n/* ----STYLE COMPONENTS----*/\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Table from 'react-bootstrap/Table'\n\n\n\nclass ProductForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.ProductServices = new ProductsServices()\n        this.filesServices = new FilesServices()\n        this.state = {\n            product: {\n                name: '',\n                excerpt: '',\n                category: '',\n                tags: '',\n                images: [],\n                model: [],\n            },\n            variant: {\n                size: '',\n                stock: 0,\n                price: 0\n            },\n\n        }\n    }\n\n    finishAction = () => {\n        this.setState({\n            product: {\n                name: '',\n                excerpt: '',\n                category: '',\n                tags: '',\n                images: [],\n                model: [],\n            },\n        })\n        // this.props.refreshList()\n    }\n\n    postProduct = () => {\n        this.ProductServices.postProduct(this.state.product)\n            .then(() => this.finishAction())\n            .catch(err => console.log(err))\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            product: { ...this.state.product, [name]: value }\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.postProduct()\n    }\n\n    handleChangeVariant = e => {\n        let { name, value } = e.target\n        this.setState({\n            variant: { ...this.state.variant, [name]: value }\n        })\n    }\n    handleSubmitVariant = e => {\n        e.preventDefault()\n        let modelCopy = [...this.state.product.model]\n        modelCopy.push(this.state.variant)\n        this.setState({\n            product: { ...this.state.product, model: modelCopy },\n            variant: {\n                size: '',\n                stock: 0,\n                price: 0\n            },\n            showmodal: false,\n        })\n    }\n\n    deleteVariant = idx => {\n        let modelCopy = [...this.state.product.model]\n        modelCopy.splice(idx, 1)\n        this.setState({\n            product: { ...this.state.product, model: modelCopy }\n        })\n    }\n\n    handleFileUpload = e => {\n        const uploadData = new FormData()\n        for (let key in e.target.files) {\n            uploadData.append(\"images\", e.target.files[key])\n        }\n        this.filesServices.handleUpload(uploadData)\n            .then(response => {\n                this.setState({\n                    product: { ...this.state.product, images: response.secure_url }\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    toggleModal = () => this.setState({ showmodal: !this.state.showmodal })\n\n    render() {\n        return (\n            <div className=\"py-5 create-product\">\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Nombre</Form.Label>\n                        <Form.Control type=\"text\" name=\"name\" value={this.state.product.name} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Descripción corta</Form.Label>\n                        <Form.Control type=\"text\" name=\"excerpt\" value={this.state.product.excerpt} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Categoría</Form.Label>\n                        <Form.Control type=\"text\" name=\"category\" value={this.state.product.category} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Etiquetas de búsqueda</Form.Label>\n                        <Form.Control type=\"text\" name=\"tags\" value={this.state.product.tags} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Imágenes</Form.Label>\n                        <Form.Control type=\"file\" name=\"images\" onChange={this.handleFileUpload} multiple />\n                        {this.state.product.images !== 0 ? this.state.product.images.map((elm, idx) => <img className=\"m-3\" src={elm} key={idx} alt={idx} style={{ width: \"50px\" }} />) : 'No hay imágenes cargadas'}\n                    </Form.Group>\n\n\n                </Form>\n\n\n                <Modal show={this.state.showmodal} onHide={this.toggleModal}>\n                    <Modal.Body>\n                        <Form onSubmit={this.handleSubmitVariant}>\n                            <Form.Group>\n                                <Form.Label>Medida</Form.Label>\n                                <Form.Control type=\"text\" name=\"size\" value={this.state.variant.size} onChange={this.handleChangeVariant} />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control type=\"number\" name=\"price\" value={this.state.variant.price} onChange={this.handleChangeVariant} />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Stock</Form.Label>\n                                <Form.Control type=\"number\" name=\"stock\" value={this.state.variant.stock} onChange={this.handleChangeVariant} />\n                            </Form.Group>\n                            <Button variant=\"dark\" type=\"submit\" onSubmit={this.handleSubmitVariant}>Añadir nueva variante al producto</Button>\n                        </Form>\n                    </Modal.Body>\n                </Modal>\n                <h3>Variaciones</h3>\n                <Button className=\"mb-20\" variant=\"outline-light\" onClick={this.toggleModal}>Crear nueva variación</Button>\n\n                <Table striped bordered>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Size</th>\n                            <th>Stock</th>\n                            <th>Price</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.product.model.map((elm, idx) =>\n                            <tr key={idx}>\n                                <td>{idx + 1}</td>\n                                <td>{elm.size}</td>\n                                <td>{elm.stock}</td>\n                                <td>{elm.price}€</td>\n                                <td><Button className=\"mb-20\" variant=\"outline-danger\" onClick={() => this.deleteVariant(idx)}>Borrar</Button></td>\n                            </tr>\n                        )}\n                    </tbody>\n                </Table>\n                <hr></hr>\n                <Button variant=\"outline-success\" type=\"submit\" size=\"lg\" block onClick={this.handleSubmit}>Crear nuevo producto</Button>\n            </div>\n        )\n    }\n}\n\nexport default ProductForm","import React, { Component } from 'react'\n\n/* ----COMPONENTS----*/\nimport ProductForm from '../../admin/productForm/productForm'\n\n/* ----ROUTES----*/\nimport { Link } from 'react-router-dom'\n\n/* ----STYLE COMPONENTS----*/\nimport Container from 'react-bootstrap/Container'\nimport Modal from 'react-bootstrap/Modal'\n\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            products: [],\n            showmodal: false\n        }\n    }\n\n    closeModal = () => this.setState({ showmodal: false })\n    openModal = () => this.setState({ showmodal: true })\n\n    render() {\n\n        return (\n            <Container>\n\n                <h1>Bienvenido a Relakso</h1>\n\n                {this.props.loggedInUser && <Link as=\"button\" className=\"mb-20 p-2 btn btn-info\" to=\"/admin/products/create\">Crear nuevo producto</Link>}\n\n                <Modal show={this.state.showmodal} onHide={this.closeModal}>\n                    <Modal.Body>\n                        <h3>Nuevo producto</h3>\n                        <hr></hr>\n                        <ProductForm closeModal={this.closeModal} />\n                    </Modal.Body>\n                </Modal>\n\n            </Container>\n        )\n    }\n}\n\nexport default Home","import React, { Component } from 'react'\n\n/* ----STYLE----*/\nimport '../login.css'\n\n/* ----SERVICES----*/\nimport AuthServices from '../../../../services/auth.services'\n\n/* ----STYLE COMPONENTS----*/\n// import Form from 'react-bootstrap/Form'\n// import Button from 'react-bootstrap/Button'\n// import Container from 'react-bootstrap/Container'\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\n\nclass Signup extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            email: '',\n            password: '',\n            errorMessage: ''\n        }\n        this.authServices = new AuthServices()\n    }\n\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    postUser = () => {\n        this.authServices.signup(this.state)\n            .then(theLoggedNewUser => {\n                this.setState({ email: '', password: '' })\n                this.props.setTheUser(theLoggedNewUser)\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        //Validación en front, TO-DO\n        // if (this.state.password.length < 6 || !this.state.email.match(/[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*@[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*[.][a-zA-Z]{1,5}/)) {\n        //     this.setState({ errorMessage: 'RELLENA LOS CAMPOS' })\n        //     return\n        // }\n        this.postUser()\n    }\n\n\n    render() {\n\n        return (\n\n\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className=\"paper\">\n                    <Avatar className=\"avatar\" style={{ backgroundColor: '#fdd100' }}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Registro\n                    </Typography>\n                    <form className=\"form\" onSubmit={this.handleSubmit}>\n                        <Grid container spacing={2}>\n                            {/* <Grid item xs={12} sm={6}>\n                                <TextField autoComplete=\"fname\" name=\"name\" variant=\"outlined\" required fullWidth id=\"name\" label=\"Nombre\" autoFocus />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField variant=\"outlined\" required fullWidth id=\"lastName\" label=\"Apellidos\" name=\"lastName\" autoComplete=\"lname\" />\n                            </Grid> */}\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Correo electrónico\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    autoFocus\n                                    type=\"text\" value={this.state.email} onChange={this.handleChange}\n                                    inputProps={{ title: \"Tu correo debe incluir @ y un dominio. Ej: .com, .es...\", pattern: \"[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*@[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*[.][a-zA-Z]{1,5}\" }}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Contraseña\" type=\"password\" id=\"password\"\n                                    inputProps={{ title: \"Tu contraseña debe incluir más de 6 caracteres\", pattern: \".{6,}\" }}\n                                    autoComplete=\"current-password\" value={this.state.password} onChange={this.handleChange} />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <FormControlLabel required control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                                    label=\"He leído y acepto la política de privacidad\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className=\"submit\">\n                            Registrarse\n                        </Button>\n                        <Grid container justify=\"flex-end\">\n                            <Grid item>\n                                <Link href=\"#\" variant=\"body2\">\n                                    ¿Ya tienes cuenta? Iniciar sesión\n                                </Link>\n                            </Grid>\n                        </Grid>\n                        {this.state.errorMessage ? (<p>{this.state.errorMessage}</p>) : null}\n                    </form>\n                </div>\n            </Container>\n\n\n            // <Container>\n\n            //     <h1>Registro de usuarios</h1>\n\n            //     <Form onSubmit={this.handleSubmit}>\n            //         <Form.Group>\n            //             <Form.Label>Email</Form.Label>\n            //             <Form.Control type=\"email\" name=\"email\" pattern=\"[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*@[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*[.][a-zA-Z]{1,5}\" placeholder=\"Enter email\" value={this.state.email} onChange={this.handleChange} />\n            //             <Form.Text className=\"text-muted\">We'll never share your email with anyone else.</Form.Text>\n            //         </Form.Group>\n\n            //         <Form.Group controlId=\"formBasicPassword\">\n            //             <Form.Label>Contraseña</Form.Label>\n            //             <Form.Control type=\"password\" pattern=\".{6,}\" name=\"password\" placeholder=\"Contraseña\" value={this.state.password} onChange={this.handleChange} />\n            //         </Form.Group>\n            //         <Form.Group controlId=\"formBasicCheckbox\">\n            //             <Form.Check type=\"checkbox\" label=\"Check me out\" />\n            //         </Form.Group>\n            //         <Button variant=\"outline-dark\" type=\"submit\">Registrarse</Button>\n            //     </Form>\n            //     <p>{this.state.errorMessage}</p>\n            // </Container>\n\n        )\n    }\n}\n\nexport default Signup","import React, { Component } from 'react'\n\n/* ----STYLE----*/\nimport '../login.css'\n\n/* ----SERVICES----*/\nimport AuthServices from '../../../../services/auth.services'\n\n/* ----STYLE COMPONENTS----*/\n// import Form from 'react-bootstrap/Form'\n// import Button from 'react-bootstrap/Button'\n// import Container from 'react-bootstrap/Container'\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            email: '',\n            password: ''\n        }\n        this.authServices = new AuthServices()\n    }\n\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    postUser = () => {\n        this.authServices.login(this.state)\n            .then(theLoggedUser => {\n                this.setState({ email: '', password: '' })\n                this.props.setTheUser(theLoggedUser)\n                this.props.history.push('/')\n            })\n            .catch(err => console.log({ err }))\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.postUser()\n    }\n\n\n    render() {\n\n        return (\n\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className=\"paper\">\n                    <Avatar className=\"avatar\" style={{ backgroundColor: '#fdd100' }}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Iniciar sesión\n                    </Typography>\n                    <form className=\"form\" onSubmit={this.handleSubmit}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Correo electrónico\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            type=\"text\" value={this.state.email} onChange={this.handleChange}\n                            inputProps={{ title: \"Tu correo debe incluir @ y un dominio. Ej: .com, .es...\", pattern: \"[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*@[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*[.][a-zA-Z]{1,5}\" }}\n                        />\n                        <TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Contraseña\" type=\"password\" id=\"password\"\n                            inputProps={{ title: \"Tu contraseña debe incluir más de 6 caracteres\", pattern: \".{6,}\" }}\n                            autoComplete=\"current-password\" value={this.state.password} onChange={this.handleChange} />\n\n                        <FormControlLabel control={<Checkbox value=\"remember\" color=\"primary\" />} label=\"No cerrar sesión\" />\n\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className=\"my-3\">\n                            Iniciar sesión\n                        </Button>\n                        <Grid container>\n                            {/* <Grid item xs>\n                                <Link href=\"#\" variant=\"body2\">¿Olvidaste la contraseña?</Link>\n                            </Grid> */}\n                            <Grid item>\n                                <Link href=\"/signup\" variant=\"body2\">\n                                    {\"¿No tienes cuenta? Crear cuenta\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n                <Box mt={8}>\n                </Box>\n            </Container>\n\n            // <Container>\n\n            //     <h1>Inicio de sesión</h1>\n\n            //     <Form onSubmit={this.handleSubmit}>\n            //         <Form.Group>\n            //             <Form.Label>Usuario</Form.Label>\n            //             <Form.Control type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n            //         </Form.Group>\n            //         <Form.Group>\n            //             <Form.Label>Contraseña</Form.Label>\n            //             <Form.Control type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n            //         </Form.Group>\n\n            //         <Button variant=\"dark\" type=\"submit\">Iniciar sesión</Button>\n            //     </Form>\n            // </Container>\n\n        )\n    }\n}\n\nexport default Login","import React, { Component } from 'react'\n\n/* ----STYLE COMPONENTS----*/\nimport ProductForm from '../productForm/productForm'\nimport Container from 'react-bootstrap/Container'\n\n\nclass CreateProduct extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            products: [],\n            showmodal: false\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"admin-body\">\n                <Container>\n                    <h1 className=\"text-center\">Panel de creación de producto</h1>\n                    <ProductForm />\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default CreateProduct","import React from 'react'\n\n/* ----ROUTES----*/\nimport { Link } from 'react-router-dom'\n\n/* ----STYLE COMPONENTS----*/\n\nimport Button from 'react-bootstrap/Button'\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst ProductCard = ({ name, images, excerpt, category, tags, model, _id, deleteProduct }) => {\n\n    return (\n        <tr>\n            <td><img src={images[0]} alt={name} style={{ width: \"50px\" }} /></td>\n            <td>{name}</td>\n            <td>{category}</td>\n            <td className=\"d-flex\">\n                <Link as=\"button\" className=\"p-2 my-2 btn btn-outline-info\" to={`/products/${_id}`}><EditIcon fontSize=\"small\" /></Link>\n                <Button variant=\"outline-danger\" className=\"ml-2 my-2 p-2\" onClick={deleteProduct}><DeleteForeverIcon fontSize=\"small\" /></Button>\n            </td>\n        </tr>\n    );\n}\n\nexport default ProductCard","import React, { Component } from 'react'\n\n/* ----STYLING----*/\nimport '../admin.css';\nimport './productList.css'\n\n/* ----SERVICES----*/\nimport ProductsServices from '../../../../services/product.services'\n\n/* ----ROUTES----*/\nimport { Link } from 'react-router-dom'\n\n/* ----STYLE COMPONENTS----*/\nimport ProductCard from './productCardList'\nimport Table from 'react-bootstrap/Table'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\n// import Button from 'react-bootstrap/Button'\n// import Modal from 'react-bootstrap/Modal'\n\nclass ProductsList extends Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            products: [],\n            showmodal: false,\n        }\n        this.productServices = new ProductsServices()\n    }\n\n    componentDidMount = () => this.getAllProducts()\n\n    getAllProducts = () => {\n        this.productServices.getAllProducts()\n            .then(allProducts => this.setState({ products: allProducts }))\n            .catch(err => console.log(err))\n    }\n\n    deleteProduct = (id) => {\n        this.productServices.deleteProduct(id)\n            .then(() => this.getAllProducts())\n            .catch(err => console.log(err))\n    }\n\n    searchProduct = (value) => {\n        this.productServices.searchProduct(value)\n            .then(allProducts => this.setState({ products: allProducts }))\n            .catch(err => console.log(err))\n    }\n\n    handleChangeSearch = e => {\n        let { value } = e.target\n        this.searchProduct(value)\n    }\n\n    render() {\n\n        return (\n            <div className=\"admin-body\">\n                <Container className=\"pb-5\">\n\n                    <Row className=\"mb-3\">\n                        <Col sm={8}>\n                            <h1>Listado de productos</h1>\n                        </Col>\n                        <Col sm={4}>\n\n                            {this.props.loggedInUser && <Link className=\"float-right mobile-button\" to=\"/admin/products/create\">\n\n                                <Fab style={{ backgroundColor: '#4caf50' }} aria-label=\"add\">\n                                    <AddIcon />\n                                </Fab></Link>}\n                        </Col>\n                    </Row>\n                    <input className=\"form-control mr-sm-2\" value={this.productsSearched} type=\"search\" name=\"search\" placeholder=\"Search\" aria-label=\"Search\"\n                        id=\"index-input\" onChange={this.handleChangeSearch} />\n\n                    {this.state.products.length ? (\n\n                        <Table responsive striped bordered>\n                            <thead>\n                                <tr>\n                                    <th>Imagen</th>\n                                    <th>Producto</th>\n                                    <th>Categoría</th>\n                                    <th>Acción</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.state.products.map(elm => <ProductCard key={elm._id} {...elm} deleteProduct={() => this.deleteProduct(elm._id)} />)}\n                            </tbody>\n                        </Table>\n\n                    )\n                        :\n                        <p>No hay resultados...</p>\n\n                    }\n\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default ProductsList","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/users`,\n            withCredentials: true\n        })\n    }\n\n    getAllUsers = () => this.service.get('/getAllUsers').then(response => response.data)\n    getUserDetails = id => this.service.get(`/getOneUser/${id}`).then(response => response.data)\n    postUser = user => this.service.post(`/new`, user).then(response => response.data)\n    updateUser = (id, user) => this.service.put(`/update/${id}`, user).then(response => response.data)\n    deleteUser = (id) => this.service.delete(`/delete/${id}`).then(response => response.data)\n    searchUser = (search) => this.service.post(`/search`, { search }).then(response => response.data)\n}","import React from 'react'\n\n/* ----ROUTES----*/\nimport { Link } from 'react-router-dom'\n\nconst UserCard = ({ email, name, city, phone, role, _id }) => {\n    return (\n        <tr>\n            <td>{email}</td>\n            <td>{name}</td>\n            <td>{city}</td>\n            <td>{phone}</td>\n            <td>{role}</td>\n            <td><Link as=\"button\" className=\"mb-20 p-2 btn btn-outline-success\" to={`/cuenta/editar/${_id}`}>Modificar</Link></td>\n        </tr>\n    );\n}\n\nexport default UserCard","import React, { Component } from 'react'\n\n/* ----STYLING----*/\nimport '../admin.css';\n\n/* ----SERVICES----*/\nimport ProductsServices from '../../../../services/user.services'\n\n/* ----COMPONENTS----*/\nimport UserCard from './userCardList'\n\n/* ----ROUTES----*/\nimport { Link } from 'react-router-dom'\n\n/* ----STYLE COMPONENTS----*/\nimport Table from 'react-bootstrap/Table'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\n\nclass UserList extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            users: [],\n            showmodal: false\n        }\n        this.productServices = new ProductsServices()\n    }\n\n    componentDidMount = () => this.getAllUsers()\n\n    getAllUsers = () => {\n        this.productServices.getAllUsers()\n            .then(allUsers => this.setState({ users: allUsers }))\n            .catch(err => console.log(err))\n    }\n\n    // closeModal = () => this.setState({ showmodal: false })\n    // openModal = () => this.setState({ showmodal: true })\n\n    render() {\n\n        return (\n            <div className=\"admin-body\">\n                <Container className=\"pb-5\">\n\n                    <Row>\n                        <Col sm={8}>\n                            <h1>Listado de usuarios</h1>\n                        </Col>\n                        <Col sm={4}>\n                            {this.props.loggedInUser && <Link as=\"button\" className=\"mb-20 p-2 btn btn-outline-warning btn-block\" to=\"/admin/users/create\">Crear nuevo usuario</Link>}\n                        </Col>\n                    </Row>\n\n\n\n\n                    {this.state.users.length ? (\n\n                        <Table responsive striped bordered>\n                            <thead>\n                                <tr>\n                                    <th>Email</th>\n                                    <th>Nombre</th>\n                                    <th>Ciudad</th>\n                                    <th>Teléfono</th>\n                                    <th>Rol</th>\n                                    <th>Acción</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.state.users.map(elm => <UserCard key={elm._id} {...elm} />)}\n                            </tbody>\n                        </Table>\n\n                    )\n                        :\n                        <p>CARGANDO...</p>\n\n                    }\n\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default UserList","import React, { Component } from 'react'\n\n/* ----STYLING----*/\nimport '../admin.css';\nimport './userForm.css';\n\n/* ----SERVICES----*/\nimport UserServices from '../../../../services/user.services'\n\n/* ----STYLE COMPONENTS----*/\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\n\nclass UserForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.Userervices = new UserServices()\n        this.state = {\n            user: {\n                name: '',\n                lastName: '',\n                role: '',\n                street: '',\n                zipCode: '',\n                city: '',\n                state: '',\n                phone: '',\n            },\n\n        }\n    }\n\n    finishAction = () => {\n        this.setState({\n            user: {\n                name: '',\n                lastName: '',\n                role: '',\n                street: '',\n                zipCode: '',\n                city: '',\n                state: '',\n                phone: '',\n            },\n        })\n    }\n\n    postUser = () => {\n        this.UserServices.postUser(this.state.user)\n            .then(() => this.finishAction())\n            .catch(err => console.log(err))\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            user: { ...this.state.user, [name]: value }\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.postProduct()\n    }\n\n    // deleteVariant = idx => {\n    //     let modelCopy = [...this.state.product.model]\n    //     modelCopy.splice(idx, 1)\n    //     this.setState({\n    //         product: { ...this.state.product, model: modelCopy }\n    //     })\n    // }\n\n    closeModal = () => this.setState({ showmodal: false })\n    openModal = () => this.setState({ showmodal: true })\n\n    render() {\n        return (\n            <div className=\"py-5 create-product\">\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Nombre</Form.Label>\n                        <Form.Control type=\"text\" name=\"name\" value={this.state.user.name} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Apellidos</Form.Label>\n                        <Form.Control type=\"text\" name=\"lastName\" value={this.state.user.lastName} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Rol</Form.Label>\n                        <Form.Control type=\"text\" name=\"role\" value={this.state.user.role} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Ciudad</Form.Label>\n                        <Form.Control type=\"text\" name=\"city\" value={this.state.user.city} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Código postal</Form.Label>\n                        <Form.Control type=\"text\" name=\"zipCode\" value={this.state.user.zipCode} onChange={this.handleChange} />\n                    </Form.Group>\n\n                </Form>\n                {/* \n\n                <Modal show={this.state.showmodal} onHide={this.closeModal}>\n                    <Modal.Body>\n                        <Form onSubmit={this.handleSubmitVariant}>\n                            <Form.Group>\n                                <Form.Label>Medida</Form.Label>\n                                <Form.Control type=\"text\" name=\"size\" value={this.state.variant.size} onChange={this.handleChangeVariant} />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control type=\"number\" name=\"price\" value={this.state.variant.price} onChange={this.handleChangeVariant} />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Stock</Form.Label>\n                                <Form.Control type=\"number\" name=\"stock\" value={this.state.variant.stock} onChange={this.handleChangeVariant} />\n                            </Form.Group>\n                            <Button variant=\"dark\" type=\"submit\" onSubmit={this.handleSubmitVariant}>Añadir nueva variante al producto</Button>\n                        </Form>\n                    </Modal.Body>\n                </Modal>\n                <h3>Variaciones</h3>\n                <Button className=\"mb-20\" variant=\"outline-light\" onClick={this.openModal}>Crear nueva variación</Button>\n\n                <Table striped bordered>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Size</th>\n                            <th>Stock</th>\n                            <th>Price</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.product.model.map((elm, idx) =>\n                            <tr key={idx}>\n                                <td>{idx + 1}</td>\n                                <td>{elm.size}</td>\n                                <td>{elm.stock}</td>\n                                <td>{elm.price}€</td>\n                                <td><Button className=\"mb-20\" variant=\"outline-danger\" onClick={() => this.deleteVariant(idx)}>Borrar</Button></td>\n                            </tr>\n                        )}\n                    </tbody>\n                </Table>\n                <hr></hr> */}\n                <Button variant=\"outline-success\" type=\"submit\" size=\"lg\" block onClick={this.handleSubmit}>Crear nuevo usuario</Button>\n            </div>\n        )\n    }\n}\n\nexport default UserForm","import React, { Component } from 'react'\n\n/* ----STYLE COMPONENTS----*/\nimport UserForm from '../userForm/userForm'\nimport Container from 'react-bootstrap/Container'\n\n\nclass CreateUser extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            products: [],\n            showmodal: false\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"admin-body\">\n                <Container>\n                    <h1 className=\"text-center\">Panel de creación de usuario</h1>\n                    <UserForm />\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default CreateUser","import React, { Component } from 'react'\n\n/* ----STYLING----*/\nimport '../shop.css'\n\n/* ----SERVICES----*/\nimport UserServices from '../../../../services/user.services'\n\n/* ----ROUTES----*/\n// import { Link } from 'react-router-dom'\n\n/* ----STYLE COMPONENTS----*/\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\n// import Form from 'react-bootstrap/Form'\n// import Toast from 'react-bootstrap/Toast'\n// import Table from 'react-bootstrap/Table'\n// import Modal from 'react-bootstrap/Modal'\nimport TextField from '@material-ui/core/TextField';\n\n\n\nclass UserUpdate extends Component {\n    constructor(props) {\n        super(props)\n        this.userServices = new UserServices()\n        this.state = {\n            user: {\n                email: '',\n                role: '',\n                name: '',\n                lastName: '',\n                street: '',\n                zipCode: '',\n                city: '',\n                state: '',\n                phone: '',\n                wishlist: [],\n                orders: [],\n            },\n            modelPrev: [],\n            showtoast: false,\n            showmodal: false,\n        }\n    }\n\n    componentDidMount = () => {\n        this.getUserDetails()\n    }\n\n    getUserDetails = () => {\n        this.userServices.getUserDetails(this.props.loggedInUser._id)\n            .then(theUser => this.setState({ user: theUser }))\n            .catch(err => console.log(err))\n    }\n\n    updateUser = () => {\n        this.userServices.updateUser(this.props.loggedInUser._id, this.state.user)\n            .then(theUser => this.setState({ user: theUser }))\n            .catch(err => console.log(err))\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.updateUser()\n        this.toggleToast()\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            user: { ...this.state.user, [name]: value }\n        })\n    }\n\n    // deleteVariant = idx => {\n    //     let modelCopy = [...this.state.modelPrev]\n    //     modelCopy.splice(idx, 1)\n    //     this.setState({\n    //         modelPrev: modelCopy\n    //     })\n    // }\n\n    toggleToast = () => this.setState({ showtoast: !this.state.showtoast })\n    toggleModal = () => this.setState({ showmodal: !this.state.showmodal })\n\n\n    render() {\n\n        return (\n            <Container className=\"client-body\">\n\n                <form onSubmit={this.handleSubmit} autoComplete=\"off\">\n                    <TextField className=\"mx-4\" id=\"standard-basic\" value={this.state.user.name} label=\"Nombre\" type=\"text\" name=\"name\" onChange={this.handleChange} />\n                    <TextField className=\"mx-4\" id=\"standard-basic\" value={this.state.user.lastName} label=\"Apellidos\" type=\"text\" name=\"lastName\" onChange={this.handleChange} />\n                    <TextField className=\"mx-4\" id=\"standard-basic\" value={this.state.user.role} label=\"Rol\" type=\"text\" name=\"role\" onChange={this.handleChange} />\n                    <TextField className=\"mx-4\" id=\"standard-basic\" value={this.state.user.city} label=\"Ciudad\" type=\"text\" name=\"city\" onChange={this.handleChange} />\n\n                </form>\n                <Button variant=\"outline-success\" type=\"submit\" size=\"lg\" block onClick={this.handleSubmit}>Modificar usuario</Button>\n\n                {/* <h1>{this.state.product.name}</h1>\n\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Nombre</Form.Label>\n                        <Form.Control type=\"text\" name=\"name\" value={this.state.product.name} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Descripción corta</Form.Label>\n                        <Form.Control type=\"text\" name=\"excerpt\" value={this.state.product.excerpt} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Categoría</Form.Label>\n                        <Form.Control type=\"text\" name=\"category\" value={this.state.product.category} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Etiquetas de búsqueda</Form.Label>\n                        <Form.Control type=\"text\" name=\"tags\" value={this.state.product.tags} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Imágenes</Form.Label>\n                        <Form.Control type=\"file\" name=\"images\" onChange={this.handleFileUpload} multiple />\n                        {this.state.product.images !== 0 ? this.state.product.images.map((elm, idx) => <img className=\"m-3\" src={elm} key={idx} alt={idx} onClick={() => this.mainImage({ idx })} style={{ width: \"50px\" }} />) : 'No hay imágenes cargadas'}\n                    </Form.Group>\n                </Form>\n                <Modal show={this.state.showmodal} onHide={this.toggleModal}>\n                    <Modal.Body>\n                        <Form onSubmit={this.handleSubmitVariant}>\n                            <Form.Group>\n                                <Form.Label>Medida</Form.Label>\n                                <Form.Control type=\"text\" name=\"size\" value={this.state.variant.size} onChange={this.handleChangeVariant} />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control type=\"number\" name=\"price\" value={this.state.variant.price} onChange={this.handleChangeVariant} />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Stock</Form.Label>\n                                <Form.Control type=\"number\" name=\"stock\" value={this.state.variant.stock} onChange={this.handleChangeVariant} />\n                            </Form.Group>\n                            <Button variant=\"dark\" type=\"submit\" onSubmit={this.handleSubmitVariant}>Añadir nueva variante al producto</Button>\n                        </Form>\n                    </Modal.Body>\n                </Modal>\n                <h3>Variaciones</h3>\n                <Button className=\"mb-20\" variant=\"outline-dark\" onClick={this.toggleModal}>Crear nueva variación</Button>\n\n                <Table responsive striped bordered>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Size</th>\n                            <th>Stock</th>\n                            <th>Price</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.modelPrev.map((elm, idx) =>\n                            <tr id={idx} key={idx}>\n                                <td>{idx + 1}</td>\n                                <td><input type=\"text\" name=\"size\" data-id={idx} value={elm.size} onChange={this.handleUpdateVariant} /></td>\n                                <td><input type=\"text\" name=\"stock\" data-id={idx} value={elm.stock} onChange={this.handleUpdateVariant} /></td>\n                                <td><input type=\"text\" name=\"price\" data-id={idx} value={elm.price} onChange={this.handleUpdateVariant} /></td>\n                                <td><Button className=\"mb-20\" variant=\"outline-danger\" onClick={() => this.deleteVariant(idx)}>Borrar</Button></td>\n                            </tr>\n                        )}\n                    </tbody>\n                </Table>\n\n\n\n\n\n\n\n                <Button variant=\"outline-success\" type=\"submit\" size=\"lg\" block onClick={this.handleSubmit}>Modificar producto</Button>\n\n                <Toast onClose={() => this.toggleToast()} show={this.state.showtoast} delay={3000} autohide>\n                    <Toast.Header>\n                        <strong className=\"mr-auto\">El usuario ha sido modificado correctamente</strong>\n                    </Toast.Header>\n                </Toast>\n                <Button as=\"div\" variant=\"dark\" size=\"sm\">\n                    <Link to=\"/\">Volver a tu cuenta</Link>\n                </Button> */}\n\n            </Container>\n\n\n        )\n    }\n}\n\nexport default UserUpdate","import React, { Component } from 'react'\n\n/* ----STYLING----*/\nimport '../shop.css'\n\n/* ----SERVICES----*/\nimport ProductServices from '../../../../services/product.services'\nimport UserServices from '../../../../services/user.services'\nimport FilesServices from '../../../../services/files.services'\nimport CartServices from '../../../../services/cart.services'\n\n/* ----ROUTES----*/\nimport { Link } from 'react-router-dom'\n\n/* ----STYLE COMPONENTS----*/\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Toast from 'react-bootstrap/Toast'\nimport Table from 'react-bootstrap/Table'\nimport Modal from 'react-bootstrap/Modal'\n\n\n\nclass ProductUpdate extends Component {\n\n    constructor(props) {\n        super(props)\n        this.productServices = new ProductServices()\n        this.userServices = new UserServices()\n        this.filesServices = new FilesServices()\n        this.cartServices = new CartServices()\n\n        this.state = {\n            product: {\n                name: '',\n                excerpt: '',\n                category: '',\n                tags: '',\n                images: [],\n                model: [],\n            },\n            variant: {\n                size: '',\n                stock: 0,\n                price: 0\n            },\n            user: {\n\n            },\n            cart: { _id: undefined, products: [] },\n            modelPrev: [],\n            choosedProduct: { product: '', model: '', quantity: 1 },\n            showtoast: false,\n            showmodal: false,\n        }\n    }\n\n    componentDidMount = () => {\n        this.getProductDetails()\n        if (this.props.userCart.length === 0) this.postCart()\n\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.loggedInUser._id !== this.props.loggedInUser._id) this.setState({ user: this.props.loggedInUser })\n        if (prevProps.userCart._id !== this.props.userCart._id) this.setState({ cart: this.props.userCart })\n    }\n\n\n    /*----LOAD PRODUCTS----*/\n    getProductDetails = () => {\n        this.productServices.getProductDetails(this.props.match.params.id)\n            .then(theProduct => this.setState({ product: theProduct }))\n            .then(() => this.setState({ modelPrev: [...this.state.product.model] }))\n            .catch(err => console.log(err))\n    }\n    /*----ADD TO CART----*/\n    addToCart = () => {\n\n        let cartCopy = { ...this.state.cart }\n        if (cartCopy.total === 0) {\n            cartCopy.products.push(this.state.choosedProduct)\n            cartCopy.total = this.state.choosedProduct.price * this.state.choosedProduct.quantity;\n        }\n        else {\n            cartCopy.total = 0\n            cartCopy.products.forEach((elm, idx) => {\n                if (elm.model.includes(this.state.choosedProduct.model)) {\n                    elm.quantity += this.state.choosedProduct.quantity\n                }\n                else {\n                    cartCopy.products.push(this.state.choosedProduct)\n                };\n                cartCopy.total += elm.price * elm.quantity;\n            })\n        }\n        // cartCopy.products.push(this.state.choosedProduct)\n        // cartCopy.products.forEach(elm => cartCopy.total += elm.price)\n        // cartCopy.total = 0\n        // cartCopy.products.forEach((elm, idx) => {\n        //     if (elm.model.includes(this.state.choosedProduct.model)) { elm.quantity += this.state.choosedProduct.quantity }\n        //     else { cartCopy.products.push(this.state.choosedProduct) };\n\n        //     cartCopy.total += elm.price * elm.quantity;\n        // })\n\n        this.setState({\n            cart: cartCopy\n        }, () => {\n            this.updateCart()\n            this.props.setTheCart(this.state.cart)\n        })\n    }\n\n    postCart = () => {\n        this.cartServices.postCart(this.state.cart)\n            .then(theCart => this.setState({ cart: { ...this.state.cart, _id: theCart._id } }))\n            .then(() => this.props.loggedInUser ? this.updateUser() : localStorage.setItem('cart', this.state.cart._id))\n            .catch(err => console.log(err))\n    }\n\n    updateCart = () => {\n        this.cartServices.updateCart(this.state.cart._id, this.state.cart)\n            .catch(err => console.log(err))\n    }\n\n    updateUser = () => {\n        let userCopy = this.state.user\n        userCopy.cart = this.state.cart\n        this.userServices.updateUser(this.props.loggedInUser._id, this.state.user)\n            .then(theUser => this.setState({ user: theUser }))\n            .catch(err => console.log(err))\n    }\n\n    chooseProduct = (idx, price) => {\n        let choosedProductCopy = { product: this.state.product._id, model: idx, price: price, quantity: 1 }\n        this.setState({ choosedProduct: choosedProductCopy }, () => console.log(this.state.choosedProduct))\n    }\n\n    /*----EDIT PRODUCT----*/\n    updateProduct = () => {\n        this.productServices.updateProduct(this.props.match.params.id, this.state.product)\n            .then(theProduct => this.setState({ product: theProduct }))\n            .catch(err => console.log(err))\n    }\n\n    handleSubmit = async e => {\n        e.preventDefault()\n        await this.setVariants()\n        this.updateProduct()\n        this.toggleToast()\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            product: { ...this.state.product, [name]: value }\n        })\n    }\n\n    handleChangeVariant = e => {\n        let { name, value } = e.target\n        this.setState({\n            variant: { ...this.state.variant, [name]: value }\n        })\n    }\n\n    handleUpdateVariant = e => {\n        let { dataset } = e.target\n        let id = dataset.id\n        let modelCopy = [...this.state.modelPrev]\n\n        const inputArray = document.getElementById(id).querySelectorAll('td input')\n        let obj = {}\n        inputArray.forEach(elm => obj[elm.name] = elm.value)\n\n        modelCopy.splice(id, 1, obj)\n        this.setState({\n            modelPrev: modelCopy,\n        })\n    }\n\n    handleSubmitVariant = e => {\n        e.preventDefault()\n        let modelCopy = [...this.state.product.model]\n        modelCopy.push(this.state.variant)\n        this.setState({\n            modelPrev: modelCopy,\n            variant: {\n                size: '',\n                stock: 0,\n                price: 0\n            },\n            showmodal: false,\n        })\n\n    }\n\n    setVariants = () => {\n        console.log(this.state)\n        let modelCopy = [...this.state.modelPrev]\n        this.setState({\n            product: { ...this.state.product, model: modelCopy },\n        })\n\n    }\n\n    deleteVariant = idx => {\n        let modelCopy = [...this.state.modelPrev]\n        modelCopy.splice(idx, 1)\n        this.setState({\n            modelPrev: modelCopy\n        })\n    }\n\n    handleFileUpload = e => {\n        const uploadData = new FormData()\n        for (let key in e.target.files) {\n            uploadData.append(\"images\", e.target.files[key])\n        }\n        this.filesServices.handleUpload(uploadData)\n            .then(response => {\n                this.setState({\n                    product: { ...this.state.product, images: response.secure_url }\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n\n\n\n    toggleToast = () => this.setState({ showtoast: !this.state.showtoast })\n    toggleModal = () => this.setState({ showmodal: !this.state.showmodal })\n\n    mainImage = id => {\n        let imagesCopy = [...this.state.product.images]\n        let idx = id.idx\n        imagesCopy.unshift(imagesCopy.splice(idx, 1).toString())\n        this.setState({\n            product: { ...this.state.product, images: imagesCopy }\n        })\n\n    }\n\n    render() {\n\n        return (\n            <Container className=\"client-body\">\n                <h1>{this.state.product.name}</h1>\n\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Nombre</Form.Label>\n                        <Form.Control type=\"text\" name=\"name\" value={this.state.product.name} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Descripción corta</Form.Label>\n                        <Form.Control type=\"text\" name=\"excerpt\" value={this.state.product.excerpt} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Categoría</Form.Label>\n                        <Form.Control type=\"text\" name=\"category\" value={this.state.product.category} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Etiquetas de búsqueda</Form.Label>\n                        <Form.Control type=\"text\" name=\"tags\" value={this.state.product.tags} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Imágenes</Form.Label>\n                        <Form.Control type=\"file\" name=\"images\" onChange={this.handleFileUpload} multiple />\n                        {this.state.product.images !== 0 ? this.state.product.images.map((elm, idx) => <img className=\"m-3\" src={elm} key={idx} alt={idx} onClick={() => this.mainImage({ idx })} style={{ width: \"50px\" }} />) : 'No hay imágenes cargadas'}\n                    </Form.Group>\n                </Form>\n                <Modal show={this.state.showmodal} onHide={this.toggleModal}>\n                    <Modal.Body>\n                        <Form onSubmit={this.handleSubmitVariant}>\n                            <Form.Group>\n                                <Form.Label>Medida</Form.Label>\n                                <Form.Control type=\"text\" name=\"size\" value={this.state.variant.size} onChange={this.handleChangeVariant} />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control type=\"number\" name=\"price\" value={this.state.variant.price} onChange={this.handleChangeVariant} />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Stock</Form.Label>\n                                <Form.Control type=\"number\" name=\"stock\" value={this.state.variant.stock} onChange={this.handleChangeVariant} />\n                            </Form.Group>\n                            <Button variant=\"dark\" type=\"submit\">Añadir nueva variante al producto</Button>\n                        </Form>\n                    </Modal.Body>\n                </Modal>\n                <h3>Variaciones</h3>\n                <Button className=\"mb-20\" variant=\"outline-dark\" onClick={this.toggleModal}>Crear nueva variación</Button>\n\n                <Table responsive striped bordered>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Size</th>\n                            <th>Stock</th>\n                            <th>Price</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.modelPrev.map((elm, idx) =>\n                            <tr id={idx} key={idx}>\n                                <td>{idx + 1}</td>\n                                <td><input type=\"text\" name=\"size\" data-id={idx} value={elm.size} onChange={this.handleUpdateVariant} /></td>\n                                <td><input type=\"number\" name=\"stock\" data-id={idx} value={elm.stock} onChange={this.handleUpdateVariant} /></td>\n                                <td><input type=\"number\" name=\"price\" data-id={idx} value={elm.price} onChange={this.handleUpdateVariant} /></td>\n                                <td><input type=\"number\" name=\"quantity\" data-id={idx} value={elm.price} onChange={this.handleUpdateVariant} /></td>\n                                <td><Button className=\"mb-20\" variant=\"outline-danger\" onClick={() => this.deleteVariant(idx)}>Borrar</Button></td>\n                                <td><Button className=\"mb-20\" variant=\"outline-warning\" onClick={() => this.chooseProduct(elm._id, elm.price)}>Elegir</Button></td>\n\n                            </tr>\n                        )}\n                    </tbody>\n                </Table>\n\n\n\n\n\n\n\n                <Button variant=\"outline-success\" type=\"submit\" size=\"lg\" block onClick={this.handleSubmit}>Modificar producto</Button>\n\n                <Toast onClose={() => this.toggleToast()} show={this.state.showtoast} delay={3000} autohide>\n                    <Toast.Header>\n                        <strong className=\"mr-auto\">El producto ha sido modificado</strong>\n                    </Toast.Header>\n                </Toast>\n                <Button as=\"div\" variant=\"dark\" size=\"sm\">\n                    <Link to=\"/admin/products/products-list\">Volver al listado de productos</Link>\n                </Button>\n\n\n                <Button className=\"my-3 float-right\" variant=\"warning\" size=\"medium\" onClick={() => this.addToCart(this.state.product._id)}>Comprar producto</Button>\n\n            </Container>\n\n\n        )\n    }\n}\n\nexport default ProductUpdate","import React, { Component } from 'react';\n\n/* -- styling ---*/\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport AuthServices from './services/auth.services'\nimport CartServices from './services/cart.services'\n\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\nimport NavBar from './components/ui/NavBar'\n\nimport Home from './components/pages/shop/home/home'\nimport Signup from './components/pages/auth/signup/Signup'\nimport Login from './components/pages/auth/login/Login'\nimport CreateProduct from './components/pages/admin/createProduct/createProduct'\nimport ProductsList from './components/pages/admin/productList/productList'\nimport UsersList from './components/pages/admin/userList/userList'\nimport CreateUser from './components/pages/admin/createUser/createUser'\nimport UserUpdate from './components/pages/shop/userUpdate/userUpdate'\nimport ProductDetails from './components/pages/shop/productDetails/productDetails';\n\n\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = { loggedInUser: false, userCart: [] }\n    this.authServices = new AuthServices()\n    this.cartServices = new CartServices()\n\n  }\n\n\n  componentDidUpdate = (prevProps, prevState) => console.log(this.state)\n  componentDidMount = () => this.fetchUser()\n\n\n  setTheUser = userObj => this.setState({ loggedInUser: userObj })\n\n  fetchUser = () => {\n    let localCartId = localStorage.getItem('cart')\n    this.authServices.loggedin()\n      .then(theUser => this.setState({ loggedInUser: theUser }))\n      .then(() => this.fetchCart(this.state.loggedInUser.cart))\n      .catch(() => this.setState({ loggedInUser: false }, this.fetchCart(localCartId)))\n  }\n\n  setTheCart = userCart => this.setState({ userCart: userCart })\n\n\n\n  fetchCart = localCartId => {\n    this.cartServices.getUserCart(localCartId)\n      .then(theCart => this.setState({ userCart: theCart }))\n      .catch(() => this.setState({ userCart: false }))\n  }\n\n\n  render() {\n\n    return (\n      <div className=\"App-header\">\n        <NavBar setTheUser={this.setTheUser} loggedInUser={this.state.loggedInUser} userCart={this.state.userCart} />\n        <main>\n          <Switch>\n            <Route exact path=\"/\" render={() => <Home loggedInUser={this.state.loggedInUser} />} />\n            <Route path=\"/signup\" render={() => <Signup setTheUser={this.setTheUser} />} />\n            <Route path=\"/login\" render={props => <Login setTheUser={this.setTheUser} {...props} />} />\n            <Route path=\"/admin/products/create\" render={() => this.state.loggedInUser ? <CreateProduct loggedInUser={this.state.loggedInUser} /> : <Redirect to=\"/\" />} />\n            <Route path=\"/admin/products/products-list\" render={() => this.state.loggedInUser ? <ProductsList loggedInUser={this.state.loggedInUser} /> : <Redirect to=\"/\" />} />\n\n            <Route path=\"/products/:id\" render={props => <ProductDetails loggedInUser={this.state.loggedInUser} setTheCart={this.setTheCart} userCart={this.state.userCart} {...props} />} />\n\n            <Route path=\"/admin/users/users-list\" render={() => this.state.loggedInUser ? <UsersList loggedInUser={this.state.loggedInUser} /> : <Redirect to=\"/\" />} />\n            <Route path=\"/admin/users/create-user\" render={() => this.state.loggedInUser ? <CreateUser loggedInUser={this.state.loggedInUser} /> : <Redirect to=\"/\" />} />\n            <Route path=\"/cuenta/editar/:id\" render={() => this.state.loggedInUser ? <UserUpdate loggedInUser={this.state.loggedInUser} /> : <Redirect to=\"/\" />} />\n          </Switch>\n        </main>\n      </div>\n\n    )\n  }\n}\n\n\nexport default App","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { BrowserRouter as Router } from 'react-router-dom'\n\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n    , document.getElementById('root'))"],"sourceRoot":""}